{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/vaadin-date-picker.html",
        "start": {
          "line": 319,
          "column": 6
        },
        "end": {
          "line": 319,
          "column": 58
        }
      },
      "elements": [
        {
          "description": "The overlay element.\n\n### Styling\n\nSee [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\nfor `<vaadin-date-picker-overlay>` parts.\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-date-picker-overlay.html",
          "properties": [
            {
              "name": "_last",
              "type": "?",
              "description": "returns true if this is the last one in the opened overlays stack\n       ",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 494,
                  "column": 6
                },
                "end": {
                  "line": 496,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "opened",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 166,
                  "column": 10
                },
                "end": {
                  "line": 170,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "template",
              "type": "Object | null | undefined",
              "description": "The template of the overlay content.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 175,
                  "column": 10
                },
                "end": {
                  "line": 178,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "instanceProps",
              "type": "Object | null | undefined",
              "description": "Optional argument for `Polymer.Templatize.templatize`.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 183,
                  "column": 10
                },
                "end": {
                  "line": 185,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "content",
              "type": "Object | null | undefined",
              "description": "References the content container after the template is stamped.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 190,
                  "column": 10
                },
                "end": {
                  "line": 193,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "withBackdrop",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 195,
                  "column": 10
                },
                "end": {
                  "line": 199,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "modeless",
              "type": "boolean | null | undefined",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 205,
                  "column": 10
                },
                "end": {
                  "line": 210,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_modelessChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "focusTrap",
              "type": "boolean | null | undefined",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 216,
                  "column": 10
                },
                "end": {
                  "line": 219,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseDownInside",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 221,
                  "column": 10
                },
                "end": {
                  "line": 223,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseUpInside",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 225,
                  "column": 10
                },
                "end": {
                  "line": 227,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_instance",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 229,
                  "column": 10
                },
                "end": {
                  "line": 231,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_boundIronOverlayCanceledListener",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 233,
                  "column": 10
                },
                "end": {
                  "line": 235,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_shadyStyleScope",
              "type": "string | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 237,
                  "column": 10
                },
                "end": {
                  "line": 237,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_contentNodes",
              "type": "Array | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 239,
                  "column": 10
                },
                "end": {
                  "line": 239,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 272,
                  "column": 6
                },
                "end": {
                  "line": 283,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_detectIosNavbar",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 285,
                  "column": 6
                },
                "end": {
                  "line": 302,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_setTemplateFromNodes",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 304,
                  "column": 6
                },
                "end": {
                  "line": 306,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "nodes"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "close",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 312,
                  "column": 6
                },
                "end": {
                  "line": 318,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "sourceEvent"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 320,
                  "column": 6
                },
                "end": {
                  "line": 331,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 333,
                  "column": 6
                },
                "end": {
                  "line": 349,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseDownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 351,
                  "column": 6
                },
                "end": {
                  "line": 353,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_mouseUpListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 355,
                  "column": 6
                },
                "end": {
                  "line": 357,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_outsideClickListener",
              "description": "We need to listen on 'click' / 'tap' event and capture it and close the overlay before\npropagating the event to the listener in the button. Otherwise, if the clicked button would call\nopen(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 367,
                  "column": 6
                },
                "end": {
                  "line": 384,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_keydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 390,
                  "column": 6
                },
                "end": {
                  "line": 411,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 417,
                  "column": 6
                },
                "end": {
                  "line": 437,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_animatedOpening",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 439,
                  "column": 6
                },
                "end": {
                  "line": 452,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_attachOverlay",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 454,
                  "column": 6
                },
                "end": {
                  "line": 458,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_animatedClosing",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 460,
                  "column": 6
                },
                "end": {
                  "line": 476,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_detachOverlay",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 478,
                  "column": 6
                },
                "end": {
                  "line": 489,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_modelessChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 498,
                  "column": 6
                },
                "end": {
                  "line": 506,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "modeless"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_enterModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 508,
                  "column": 6
                },
                "end": {
                  "line": 520,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_exitModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 522,
                  "column": 6
                },
                "end": {
                  "line": 533,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_removeOldContent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 535,
                  "column": 6
                },
                "end": {
                  "line": 557,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_templateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 559,
                  "column": 6
                },
                "end": {
                  "line": 623,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_isFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 625,
                  "column": 6
                },
                "end": {
                  "line": 627,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_focusedIndex",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 629,
                  "column": 6
                },
                "end": {
                  "line": 632,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "elements"
                }
              ],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_cycleTab",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 634,
                  "column": 6
                },
                "end": {
                  "line": 652,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "increment"
                },
                {
                  "name": "index"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_getFocusableElements",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 654,
                  "column": 6
                },
                "end": {
                  "line": 657,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "_processPendingMutationObserversFor",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 659,
                  "column": 6
                },
                "end": {
                  "line": 663,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "privacy": "private",
          "superclass": "Vaadin.OverlayElement",
          "name": "Vaadin.DatePickerOverlayElement",
          "attributes": [
            {
              "name": "opened",
              "description": "",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 166,
                  "column": 10
                },
                "end": {
                  "line": 170,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "template",
              "description": "The template of the overlay content.",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 175,
                  "column": 10
                },
                "end": {
                  "line": 178,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "instance-props",
              "description": "Optional argument for `Polymer.Templatize.templatize`.",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 183,
                  "column": 10
                },
                "end": {
                  "line": 185,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "content",
              "description": "References the content container after the template is stamped.",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 190,
                  "column": 10
                },
                "end": {
                  "line": 193,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "with-backdrop",
              "description": "",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 195,
                  "column": 10
                },
                "end": {
                  "line": 199,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "modeless",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 205,
                  "column": 10
                },
                "end": {
                  "line": 210,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "name": "focus-trap",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "sourceRange": {
                "file": "../../vaadin-overlay/src/vaadin-overlay.html",
                "start": {
                  "line": 216,
                  "column": 10
                },
                "end": {
                  "line": 219,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-close",
              "description": "vaadin-overlay-close\nfired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-escape-press",
              "description": "vaadin-overlay-escape-press\nfired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-open",
              "description": "vaadin-overlay-open\nfired after the `vaadin-overlay` is opened.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-outside-click",
              "description": "We need to listen on 'click' / 'tap' event and capture it and close the overlay before\npropagating the event to the listener in the button. Otherwise, if the clicked button would call\nopen(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "opened-changed",
              "description": "Fired when the `opened` property changes.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "template-changed",
              "description": "Fired when the `template` property changes.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            },
            {
              "type": "CustomEvent",
              "name": "content-changed",
              "description": "Fired when the `content` property changes.",
              "metadata": {},
              "inheritedFrom": "Vaadin.OverlayElement"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-date-picker-overlay"
        },
        {
          "description": "",
          "summary": "",
          "path": "src/vaadin-month-calendar.html",
          "properties": [
            {
              "name": "month",
              "type": "Date | null | undefined",
              "description": "A `Date` object defining the month to be displayed. Only year and\nmonth properties are actually used.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 12
                },
                "end": {
                  "line": 110,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "selectedDate",
              "type": "Date | null | undefined",
              "description": "A `Date` object for the currently selected date.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 12
                },
                "end": {
                  "line": 118,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "focusedDate",
              "type": "Date | null | undefined",
              "description": "A `Date` object for the currently focused date.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 123,
                  "column": 12
                },
                "end": {
                  "line": 123,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 12
                },
                "end": {
                  "line": 128,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "i18n",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 12
                },
                "end": {
                  "line": 132,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "ignoreTaps",
              "type": "boolean | null | undefined",
              "description": "Flag stating whether taps on the component should be ignored.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 12
                },
                "end": {
                  "line": 137,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_notTapping",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 139,
                  "column": 12
                },
                "end": {
                  "line": 139,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "minDate",
              "type": "Date | null | undefined",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 144,
                  "column": 12
                },
                "end": {
                  "line": 147,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "maxDate",
              "type": "Date | null | undefined",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 152,
                  "column": 12
                },
                "end": {
                  "line": 155,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "_days",
              "type": "Array | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 157,
                  "column": 12
                },
                "end": {
                  "line": 160,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "disabled",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 162,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "_dateEquals",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 176,
                  "column": 8
                },
                "end": {
                  "line": 178,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date1"
                },
                {
                  "name": "date2"
                }
              ]
            },
            {
              "name": "_dateAllowed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 180,
                  "column": 8
                },
                "end": {
                  "line": 182,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ]
            },
            {
              "name": "_isDisabled",
              "description": "Returns true if all the dates in the month are out of the allowed range",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 185,
                  "column": 8
                },
                "end": {
                  "line": 200,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "month"
                },
                {
                  "name": "minDate"
                },
                {
                  "name": "maxDate"
                }
              ]
            },
            {
              "name": "_getTitle",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 202,
                  "column": 8
                },
                "end": {
                  "line": 207,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "month"
                },
                {
                  "name": "monthNames"
                }
              ]
            },
            {
              "name": "_onMonthGridTouchStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 209,
                  "column": 8
                },
                "end": {
                  "line": 212,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_dateAdd",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 214,
                  "column": 8
                },
                "end": {
                  "line": 216,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "delta"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_applyFirstDayOfWeek",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 218,
                  "column": 8
                },
                "end": {
                  "line": 224,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "weekDayNames"
                },
                {
                  "name": "firstDayOfWeek"
                }
              ]
            },
            {
              "name": "_getWeekDayNames",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 226,
                  "column": 8
                },
                "end": {
                  "line": 241,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "weekDayNames"
                },
                {
                  "name": "weekDayNamesShort"
                },
                {
                  "name": "showWeekNumbers"
                },
                {
                  "name": "firstDayOfWeek"
                }
              ]
            },
            {
              "name": "_getDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 243,
                  "column": 8
                },
                "end": {
                  "line": 245,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "name": "_showWeekNumbersChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 247,
                  "column": 8
                },
                "end": {
                  "line": 253,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "showWeekNumbers"
                },
                {
                  "name": "firstDayOfWeek"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_showWeekSeparator",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "showWeekNumbers"
                },
                {
                  "name": "firstDayOfWeek"
                }
              ]
            },
            {
              "name": "_isToday",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 260,
                  "column": 8
                },
                "end": {
                  "line": 262,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "name": "_getDays",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 264,
                  "column": 8
                },
                "end": {
                  "line": 289,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "month"
                },
                {
                  "name": "firstDayOfWeek"
                }
              ]
            },
            {
              "name": "_getWeekNumber",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 291,
                  "column": 8
                },
                "end": {
                  "line": 304,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "days"
                }
              ]
            },
            {
              "name": "_getWeekNumbers",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 306,
                  "column": 8
                },
                "end": {
                  "line": 310,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "dates"
                }
              ]
            },
            {
              "name": "_handleTap",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 312,
                  "column": 8
                },
                "end": {
                  "line": 317,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 319,
                  "column": 8
                },
                "end": {
                  "line": 321,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_getRole",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 323,
                  "column": 8
                },
                "end": {
                  "line": 325,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "name": "_getAriaLabel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 327,
                  "column": 8
                },
                "end": {
                  "line": 342,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "name": "_getAriaDisabled",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 344,
                  "column": 8
                },
                "end": {
                  "line": 349,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 350,
              "column": 7
            }
          },
          "privacy": "private",
          "superclass": "HTMLElement",
          "name": "Vaadin.MonthCalendarElement",
          "attributes": [
            {
              "name": "month",
              "description": "A `Date` object defining the month to be displayed. Only year and\nmonth properties are actually used.",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 12
                },
                "end": {
                  "line": 110,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "selected-date",
              "description": "A `Date` object for the currently selected date.",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 12
                },
                "end": {
                  "line": 118,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "focused-date",
              "description": "A `Date` object for the currently focused date.",
              "sourceRange": {
                "start": {
                  "line": 123,
                  "column": 12
                },
                "end": {
                  "line": 123,
                  "column": 29
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "show-week-numbers",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 12
                },
                "end": {
                  "line": 128,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "i18n",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 12
                },
                "end": {
                  "line": 132,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            },
            {
              "name": "ignore-taps",
              "description": "Flag stating whether taps on the component should be ignored.",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 12
                },
                "end": {
                  "line": 137,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "min-date",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "sourceRange": {
                "start": {
                  "line": 144,
                  "column": 12
                },
                "end": {
                  "line": 147,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "max-date",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "sourceRange": {
                "start": {
                  "line": 152,
                  "column": 12
                },
                "end": {
                  "line": 155,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "disabled",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 162,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "selected-date-changed",
              "description": "Fired when the `selectedDate` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-month-calendar"
        },
        {
          "description": "",
          "summary": "",
          "path": "src/vaadin-infinite-scroller.html",
          "properties": [
            {
              "name": "__dataClientsReady",
              "type": "boolean",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1147,
                  "column": 8
                },
                "end": {
                  "line": 1147,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataPendingClients",
              "type": "Array",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1149,
                  "column": 8
                },
                "end": {
                  "line": 1149,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataToNotify",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1151,
                  "column": 8
                },
                "end": {
                  "line": 1151,
                  "column": 28
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataLinkedPaths",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1153,
                  "column": 8
                },
                "end": {
                  "line": 1153,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataHasPaths",
              "type": "boolean",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1155,
                  "column": 8
                },
                "end": {
                  "line": 1155,
                  "column": 28
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataCompoundStorage",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1157,
                  "column": 8
                },
                "end": {
                  "line": 1157,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataHost",
              "type": "Polymer_PropertyEffects",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1159,
                  "column": 8
                },
                "end": {
                  "line": 1159,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataTemp",
              "type": "!Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1161,
                  "column": 8
                },
                "end": {
                  "line": 1161,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataClientsInitialized",
              "type": "boolean",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1163,
                  "column": 8
                },
                "end": {
                  "line": 1163,
                  "column": 38
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__data",
              "type": "!Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1165,
                  "column": 8
                },
                "end": {
                  "line": 1165,
                  "column": 20
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataPending",
              "type": "!Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1167,
                  "column": 8
                },
                "end": {
                  "line": 1167,
                  "column": 27
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__dataOld",
              "type": "!Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1169,
                  "column": 8
                },
                "end": {
                  "line": 1169,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__computeEffects",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1171,
                  "column": 8
                },
                "end": {
                  "line": 1171,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__reflectEffects",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1173,
                  "column": 8
                },
                "end": {
                  "line": 1173,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__notifyEffects",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1175,
                  "column": 8
                },
                "end": {
                  "line": 1175,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__propagateEffects",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1177,
                  "column": 8
                },
                "end": {
                  "line": 1177,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__observeEffects",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1179,
                  "column": 8
                },
                "end": {
                  "line": 1179,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__readOnly",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1181,
                  "column": 8
                },
                "end": {
                  "line": 1181,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__templateInfo",
              "type": "!TemplateInfo",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1183,
                  "column": 8
                },
                "end": {
                  "line": 1183,
                  "column": 28
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "PROPERTY_EFFECT_TYPES",
              "type": "?",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1186,
                  "column": 6
                },
                "end": {
                  "line": 1188,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_template",
              "type": "HTMLTemplateElement",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 421,
                  "column": 8
                },
                "end": {
                  "line": 421,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "_importPath",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 423,
                  "column": 8
                },
                "end": {
                  "line": 423,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "rootPath",
              "type": "string",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 425,
                  "column": 8
                },
                "end": {
                  "line": 425,
                  "column": 22
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "importPath",
              "type": "string",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 427,
                  "column": 8
                },
                "end": {
                  "line": 427,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "root",
              "type": "(StampedTemplate | HTMLElement | ShadowRoot)",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 429,
                  "column": 8
                },
                "end": {
                  "line": 429,
                  "column": 18
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "$",
              "type": "!Object.<string, !Element>",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 431,
                  "column": 8
                },
                "end": {
                  "line": 431,
                  "column": 15
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "position",
              "type": "?",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 246,
                  "column": 6
                },
                "end": {
                  "line": 248,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              }
            },
            {
              "name": "itemHeight",
              "type": "?",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 250,
                  "column": 6
                },
                "end": {
                  "line": 264,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "_bufferHeight",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 266,
                  "column": 6
                },
                "end": {
                  "line": 268,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "bufferSize",
              "type": "number | null | undefined",
              "description": "Count of individual items in each buffer.\nThe scroller has 2 buffers altogether so bufferSize of 20\nwill result in 40 buffered DOM items in total.\nChanging after initialization not supported.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 10
                },
                "end": {
                  "line": 85,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "20"
            },
            {
              "name": "_initialScroll",
              "type": "?",
              "description": "The amount of initial scroll top. Needed in order for the\nuser to be able to scroll backwards.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 91,
                  "column": 10
                },
                "end": {
                  "line": 93,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "500000"
            },
            {
              "name": "_initialIndex",
              "type": "?",
              "description": "The index/position mapped at _initialScroll point.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 98,
                  "column": 10
                },
                "end": {
                  "line": 100,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "0"
            },
            {
              "name": "_buffers",
              "type": "Array | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 10
                },
                "end": {
                  "line": 102,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "_preventScrollEvent",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 10
                },
                "end": {
                  "line": 104,
                  "column": 38
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_mayHaveMomentum",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 106,
                  "column": 10
                },
                "end": {
                  "line": 106,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_initialized",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 108,
                  "column": 10
                },
                "end": {
                  "line": 108,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "active",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 10
                },
                "end": {
                  "line": 113,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_activated\"",
                  "attributeType": "Boolean"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "_stampTemplate",
              "description": "Stamps the provided template and performs instance-time setup for\nPolymer template features, including data bindings, declarative event\nlisteners, and the `this.$` map of `id`'s to nodes.  A document fragment\nis returned containing the stamped DOM, ready for insertion into the\nDOM.\n\nThis method may be called more than once; however note that due to\n`shadycss` polyfill limitations, only styles from templates prepared\nusing `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\nto the shadow root and support CSS custom properties), and note that\n`ShadyCSS.prepareTemplate` may only be called once per element. As such,\nany styles required by in runtime-stamped templates must be included\nin the main element template.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2423,
                  "column": 6
                },
                "end": {
                  "line": 2448,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template",
                  "type": "!HTMLTemplateElement",
                  "description": "Template to stamp"
                }
              ],
              "return": {
                "type": "!StampedTemplate",
                "desc": "Cloned template content"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_addMethodEventListenerToNode",
              "description": "Adds an event listener by method name for the event provided.\n\nThis method generates a handler function that looks up the method\nname at handling time.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 452,
                  "column": 6
                },
                "end": {
                  "line": 457,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "!Node",
                  "description": "Node to add listener on"
                },
                {
                  "name": "eventName",
                  "type": "string",
                  "description": "Name of event"
                },
                {
                  "name": "methodName",
                  "type": "string",
                  "description": "Name of method"
                },
                {
                  "name": "context",
                  "type": "*=",
                  "description": "Context the method will be called on (defaults\n  to `node`)"
                }
              ],
              "return": {
                "type": "Function",
                "desc": "Generated handler function"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "_addEventListenerToNode",
              "description": "Override point for adding custom or simulated event handling.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 467,
                  "column": 6
                },
                "end": {
                  "line": 469,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "!Node",
                  "description": "Node to add event listener to"
                },
                {
                  "name": "eventName",
                  "type": "string",
                  "description": "Name of event"
                },
                {
                  "name": "handler",
                  "type": "function (!Event): void",
                  "description": "Listener function to add"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "_removeEventListenerFromNode",
              "description": "Override point for adding custom or simulated event handling.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 479,
                  "column": 6
                },
                "end": {
                  "line": 481,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "Node",
                  "description": "Node to remove event listener from"
                },
                {
                  "name": "eventName",
                  "type": "string",
                  "description": "Name of event"
                },
                {
                  "name": "handler",
                  "type": "function (!Event): void",
                  "description": "Listener function to remove"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "_createPropertyAccessor",
              "description": "Creates a setter/getter pair for the named property with its own\nlocal storage.  The getter returns the value in the local storage,\nand the setter calls `_setProperty`, which updates the local storage\nfor the property and enqueues a `_propertiesChanged` callback.\n\nThis method may be called on a prototype or an instance.  Calling\nthis method may overwrite a property value that already exists on\nthe prototype/instance by creating the accessor.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 106,
                  "column": 8
                },
                "end": {
                  "line": 115,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of the property"
                },
                {
                  "name": "readOnly",
                  "type": "boolean=",
                  "description": "When true, no setter is created; the\n  protected `_setProperty` function must be used to set the property"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_addPropertyToAttributeMap",
              "description": "Adds the given `property` to a map matching attribute names\nto property names, using `attributeNameForProperty`. This map is\nused when deserializing attribute values to properties.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 124,
                  "column": 8
                },
                "end": {
                  "line": 132,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of the property"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_definePropertyAccessor",
              "description": "Defines a property accessor for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 140,
                  "column": 9
                },
                "end": {
                  "line": 153,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of the property"
                },
                {
                  "name": "readOnly",
                  "type": "boolean=",
                  "description": "When true, no setter is created"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 6
                },
                "end": {
                  "line": 143,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_initializeProperties",
              "description": "Overrides the default `Polymer.PropertyAccessors` to ensure class\nmetaprogramming related to property accessors and effects has\ncompleted (calls `finalize`).\n\nIt also initializes any property defaults provided via `value` in\n`properties` metadata.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 446,
                  "column": 6
                },
                "end": {
                  "line": 480,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "_initializeInstanceProperties",
              "description": "Called at ready time with bag of instance properties that overwrote\naccessors when the element upgraded.\n\nThe default implementation sets these properties back into the\nsetter at ready time.  This method is provided as an override\npoint for customizing or providing more efficient initialization.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 222,
                  "column": 8
                },
                "end": {
                  "line": 224,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "props",
                  "type": "Object",
                  "description": "Bag of property values that were overwritten\n  when creating property accessors."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_setProperty",
              "description": "Updates the local storage for a property (via `_setPendingProperty`)\nand enqueues a `_proeprtiesChanged` callback.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 235,
                  "column": 8
                },
                "end": {
                  "line": 239,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of the property"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "Value to set"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_getProperty",
              "description": "Returns the value for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 247,
                  "column": 8
                },
                "end": {
                  "line": 249,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of property"
                }
              ],
              "return": {
                "type": "*",
                "desc": "Value for the given property"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_setPendingProperty",
              "description": "Updates the local storage for a property, records the previous value,\nand adds it to the set of \"pending changes\" that will be passed to the\n`_propertiesChanged` callback.  This method does not enqueue the\n`_propertiesChanged` callback.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 264,
                  "column": 8
                },
                "end": {
                  "line": 280,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of the property"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "Value to set"
                },
                {
                  "name": "ext",
                  "type": "boolean=",
                  "description": "Not used here; affordance for closure"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "Returns true if the property changed"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_invalidateProperties",
              "description": "Marks the properties as invalid, and enqueues an async\n`_propertiesChanged` callback.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 290,
                  "column": 8
                },
                "end": {
                  "line": 300,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_enableProperties",
              "description": "Call to enable property accessor processing. Before this method is\ncalled accessor values will be set but side effects are\nqueued. When called, any pending side effects occur immediately.\nFor elements, generally `connectedCallback` is a normal spot to do so.\nIt is safe to call this method multiple times as it only turns on\nproperty accessors once.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 313,
                  "column": 8
                },
                "end": {
                  "line": 322,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_flushProperties",
              "description": "Calls the `_propertiesChanged` callback with the current set of\npending changes (and old values recorded when pending changes were\nset), and resets the pending set of changes. Generally, this method\nshould not be called in user code.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 333,
                  "column": 8
                },
                "end": {
                  "line": 342,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_shouldPropertiesChange",
              "description": "Called in `_flushProperties` to determine if `_propertiesChanged`\nshould be called. The default implementation returns true if\nproperties are pending. Override to customize when\n`_propertiesChanged` is called.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 356,
                  "column": 8
                },
                "end": {
                  "line": 358,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "currentProps",
                  "type": "!Object",
                  "description": "Bag of all current accessor values"
                },
                {
                  "name": "changedProps",
                  "type": "!Object",
                  "description": "Bag of properties changed since the last\n  call to `_propertiesChanged`"
                },
                {
                  "name": "oldProps",
                  "type": "!Object",
                  "description": "Bag of previous values for each property\n  in `changedProps`"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "true if changedProps is truthy"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_propertiesChanged",
              "description": "Callback called when any properties with accessors created via\n`_createPropertyAccessor` have been set.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 372,
                  "column": 8
                },
                "end": {
                  "line": 373,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "currentProps",
                  "type": "!Object",
                  "description": "Bag of all current accessor values"
                },
                {
                  "name": "changedProps",
                  "type": "!Object",
                  "description": "Bag of properties changed since the last\n  call to `_propertiesChanged`"
                },
                {
                  "name": "oldProps",
                  "type": "!Object",
                  "description": "Bag of previous values for each property\n  in `changedProps`"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_shouldPropertyChange",
              "description": "Method called to determine whether a property value should be\nconsidered as a change and cause the `_propertiesChanged` callback\nto be enqueued.\n\nThe default implementation returns `true` if a strict equality\ncheck fails. The method always returns false for `NaN`.\n\nOverride this method to e.g. provide stricter checking for\nObjects/Arrays when using immutable patterns.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 393,
                  "column": 8
                },
                "end": {
                  "line": 400,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "New property value"
                },
                {
                  "name": "old",
                  "type": "*",
                  "description": "Previous property value"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "Whether the property should be considered a change\n  and enqueue a `_proeprtiesChanged` callback"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "attributeChangedCallback",
              "description": "Implements native Custom Elements `attributeChangedCallback` to\nset an attribute value to a property via `_attributeToProperty`.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 412,
                  "column": 8
                },
                "end": {
                  "line": 419,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Name of attribute that changed"
                },
                {
                  "name": "old",
                  "type": "?string",
                  "description": "Old attribute value"
                },
                {
                  "name": "value",
                  "type": "?string",
                  "description": "New attribute value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_attributeToProperty",
              "description": "Deserializes an attribute to its associated property.\n\nThis method calls the `_deserializeValue` method to convert the string to\na typed value.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 433,
                  "column": 8
                },
                "end": {
                  "line": 440,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "attribute",
                  "type": "string",
                  "description": "Name of attribute to deserialize."
                },
                {
                  "name": "value",
                  "type": "?string",
                  "description": "of the attribute."
                },
                {
                  "name": "type",
                  "type": "*=",
                  "description": "type to deserialize to, defaults to the value\nreturned from `typeForProperty`"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_propertyToAttribute",
              "description": "Serializes a property to its associated attribute.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 452,
                  "column": 8
                },
                "end": {
                  "line": 458,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name to reflect."
                },
                {
                  "name": "attribute",
                  "type": "string=",
                  "description": "Attribute name to reflect to."
                },
                {
                  "name": "value",
                  "type": "*=",
                  "description": "Property value to refect."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_valueToNodeAttribute",
              "description": "Sets a typed value to an HTML attribute on a node.\n\nThis method calls the `_serializeValue` method to convert the typed\nvalue to a string.  If the `_serializeValue` method returns `undefined`,\nthe attribute will be removed (this is the default for boolean\ntype `false`).",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 473,
                  "column": 8
                },
                "end": {
                  "line": 480,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "Element",
                  "description": "Element to set attribute to."
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "Value to serialize."
                },
                {
                  "name": "attribute",
                  "type": "string",
                  "description": "Attribute name to serialize to."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_serializeValue",
              "description": "Converts a typed JavaScript value to a string.\n\nThis method is called when setting JS property values to\nHTML attributes.  Users may override this method to provide\nserialization for custom types.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 493,
                  "column": 8
                },
                "end": {
                  "line": 500,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "*",
                  "description": "Property value to serialize."
                }
              ],
              "return": {
                "type": "(string | undefined)",
                "desc": "String serialized from the provided\nproperty  value."
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_deserializeValue",
              "description": "Converts a string to a typed JavaScript value.\n\nThis method is called when reading HTML attribute values to\nJS properties.  Users may override this method to provide\ndeserialization for custom `type`s. Types for `Boolean`, `String`,\nand `Number` convert attributes to the expected types.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 514,
                  "column": 8
                },
                "end": {
                  "line": 523,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "?string",
                  "description": "Value to deserialize."
                },
                {
                  "name": "type",
                  "type": "*=",
                  "description": "Type to deserialize the string to."
                }
              ],
              "return": {
                "type": "*",
                "desc": "Typed value deserialized from the provided string."
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "_initializeProtoProperties",
              "description": "Overrides `Polymer.PropertyAccessors` implementation to provide a\nmore efficient implementation of initializing properties from\nthe prototype on the instance.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1217,
                  "column": 6
                },
                "end": {
                  "line": 1221,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "props",
                  "type": "Object",
                  "description": "Properties to initialize on the prototype"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_ensureAttribute",
              "description": "Ensures the element has the given attribute. If it does not,\nassigns the given value to the attribute.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-accessors.html",
                "start": {
                  "line": 192,
                  "column": 6
                },
                "end": {
                  "line": 197,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "attribute",
                  "type": "string",
                  "description": "Name of attribute to ensure is set."
                },
                {
                  "name": "value",
                  "type": "string",
                  "description": "of the attribute."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyAccessors"
            },
            {
              "name": "_hasAccessor",
              "description": "Returns true if this library created an accessor for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-accessors.html",
                "start": {
                  "line": 299,
                  "column": 6
                },
                "end": {
                  "line": 301,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if an accessor was created"
              },
              "inheritedFrom": "Polymer.PropertyAccessors"
            },
            {
              "name": "_isPropertyPending",
              "description": "Returns true if the specified property has a pending change.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-accessors.html",
                "start": {
                  "line": 310,
                  "column": 6
                },
                "end": {
                  "line": 312,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if property has a pending change"
              },
              "inheritedFrom": "Polymer.PropertyAccessors"
            },
            {
              "name": "_addPropertyEffect",
              "description": "Equivalent to static `addPropertyEffect` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1255,
                  "column": 6
                },
                "end": {
                  "line": 1263,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property that should trigger the effect"
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
                },
                {
                  "name": "effect",
                  "type": "Object=",
                  "description": "Effect metadata object"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_removePropertyEffect",
              "description": "Removes the given property effect.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1273,
                  "column": 6
                },
                "end": {
                  "line": 1279,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property the effect was associated with"
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
                },
                {
                  "name": "effect",
                  "type": "Object=",
                  "description": "Effect metadata object to remove"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_hasPropertyEffect",
              "description": "Returns whether the current prototype/instance has a property effect\nof a certain type.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1290,
                  "column": 6
                },
                "end": {
                  "line": 1293,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                },
                {
                  "name": "type",
                  "type": "string=",
                  "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the prototype/instance has an effect of this type"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_hasReadOnlyEffect",
              "description": "Returns whether the current prototype/instance has a \"read only\"\naccessor for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1303,
                  "column": 6
                },
                "end": {
                  "line": 1305,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the prototype/instance has an effect of this type"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_hasNotifyEffect",
              "description": "Returns whether the current prototype/instance has a \"notify\"\nproperty effect for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1315,
                  "column": 6
                },
                "end": {
                  "line": 1317,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the prototype/instance has an effect of this type"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_hasReflectEffect",
              "description": "Returns whether the current prototype/instance has a \"reflect to attribute\"\nproperty effect for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1327,
                  "column": 6
                },
                "end": {
                  "line": 1329,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the prototype/instance has an effect of this type"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_hasComputedEffect",
              "description": "Returns whether the current prototype/instance has a \"computed\"\nproperty effect for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1339,
                  "column": 6
                },
                "end": {
                  "line": 1341,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the prototype/instance has an effect of this type"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_setPendingPropertyOrPath",
              "description": "Sets a pending property or path.  If the root property of the path in\nquestion had no accessor, the path is set, otherwise it is enqueued\nvia `_setPendingProperty`.\n\nThis function isolates relatively expensive functionality necessary\nfor the public API (`set`, `setProperties`, `notifyPath`, and property\nchange listeners via {{...}} bindings), such that it is only done\nwhen paths enter the system, and not at every propagation step.  It\nalso sets a `__dataHasPaths` flag on the instance which is used to\nfast-path slower path-matching code in the property effects host paths.\n\n`path` can be a path string or array of path parts as accepted by the\npublic API.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1373,
                  "column": 6
                },
                "end": {
                  "line": 1405,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(number | string)>)",
                  "description": "Path to set"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "Value to set"
                },
                {
                  "name": "shouldNotify",
                  "type": "boolean=",
                  "description": "Set to true if this change should\n cause a property notification event dispatch"
                },
                {
                  "name": "isPathNotification",
                  "type": "boolean=",
                  "description": "If the path being set is a path\n  notification of an already changed value, as opposed to a request\n  to set and notify the change.  In the latter `false` case, a dirty\n  check is performed and then the value is set to the path before\n  enqueuing the pending property change."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "Returns true if the property/path was enqueued in\n  the pending changes bag."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_setUnmanagedPropertyToNode",
              "description": "Applies a value to a non-Polymer element/node's property.\n\nThe implementation makes a best-effort at binding interop:\nSome native element properties have side-effects when\nre-setting the same value (e.g. setting `<input>.value` resets the\ncursor position), so we do a dirty-check before setting the value.\nHowever, for better interop with non-Polymer custom elements that\naccept objects, we explicitly re-set object changes coming from the\nPolymer world (which may include deep object changes without the\ntop reference changing), erring on the side of providing more\ninformation.\n\nUsers may override this method to provide alternate approaches.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1428,
                  "column": 6
                },
                "end": {
                  "line": 1436,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "!Node",
                  "description": "The node to set a property on"
                },
                {
                  "name": "prop",
                  "type": "string",
                  "description": "The property to set"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "The value to set"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_enqueueClient",
              "description": "Enqueues the given client on a list of pending clients, whose\npending property changes can later be flushed via a call to\n`_flushClients`.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1543,
                  "column": 6
                },
                "end": {
                  "line": 1548,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "client",
                  "type": "Object",
                  "description": "PropertyEffects client to enqueue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_flushClients",
              "description": "Flushes any clients previously enqueued via `_enqueueClient`, causing\ntheir `_flushProperties` method to run.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1569,
                  "column": 6
                },
                "end": {
                  "line": 1580,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "__enableOrFlushClients",
              "description": "(c) the stamped dom enables.",
              "privacy": "private",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1594,
                  "column": 6
                },
                "end": {
                  "line": 1607,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_readyClients",
              "description": "Implements `PropertyEffects`'s `_readyClients` call. Attaches\nelement dom by calling `_attachDom` with the dom stamped from the\nelement's template via `_stampTemplate`. Note that this allows\nclient dom to be attached to the element prior to any observers\nrunning.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 558,
                  "column": 6
                },
                "end": {
                  "line": 567,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "setProperties",
              "description": "Sets a bag of property changes to this instance, and\nsynchronously processes all effects of the properties as a batch.\n\nProperty names must be simple properties, not paths.  Batched\npath propagation is not supported.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1636,
                  "column": 6
                },
                "end": {
                  "line": 1647,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "props",
                  "type": "Object",
                  "description": "Bag of one or more key-value pairs whose key is\n  a property and value is the new value to set for that property."
                },
                {
                  "name": "setReadOnly",
                  "type": "boolean=",
                  "description": "When true, any private values set in\n  `props` will be set. By default, `setProperties` will not set\n  `readOnly: true` root properties."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_propagatePropertyChanges",
              "description": "Called to propagate any property changes to stamped template nodes\nmanaged by this element.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1734,
                  "column": 6
                },
                "end": {
                  "line": 1744,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "changedProps",
                  "type": "Object",
                  "description": "Bag of changed properties"
                },
                {
                  "name": "oldProps",
                  "type": "Object",
                  "description": "Bag of previous values for changed properties"
                },
                {
                  "name": "hasPaths",
                  "type": "boolean",
                  "description": "True with `props` contains one or more paths"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "linkPaths",
              "description": "Aliases one data path as another, such that path notifications from one\nare routed to the other.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1755,
                  "column": 6
                },
                "end": {
                  "line": 1760,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "to",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Target path to link."
                },
                {
                  "name": "from",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Source path to link."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "unlinkPaths",
              "description": "Removes a data path alias previously established with `_linkPaths`.\n\nNote, the path to unlink should be the target (`to`) used when\nlinking the paths.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1772,
                  "column": 6
                },
                "end": {
                  "line": 1777,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Target path to unlink."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "notifySplices",
              "description": "Notify that an array has changed.\n\nExample:\n\n    this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n    ...\n    this.items.splice(1, 1, {name: 'Sam'});\n    this.items.push({name: 'Bob'});\n    this.notifySplices('items', [\n      { index: 1, removed: [{name: 'Todd'}], addedCount: 1, object: this.items, type: 'splice' },\n      { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n    ]);",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1809,
                  "column": 6
                },
                "end": {
                  "line": 1813,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "string",
                  "description": "Path that should be notified."
                },
                {
                  "name": "splices",
                  "type": "Array",
                  "description": "Array of splice records indicating ordered\n  changes that occurred to the array. Each record should have the\n  following fields:\n   * index: index at which the change occurred\n   * removed: array of items that were removed from this index\n   * addedCount: number of new items added at this index\n   * object: a reference to the array in question\n   * type: the string literal 'splice'\n\n  Note that splice records _must_ be normalized such that they are\n  reported in index order (raw results from `Object.observe` are not\n  ordered and must be normalized/merged before notifying)."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "get",
              "description": "Convenience method for reading a value from a path.\n\nNote, if any part in the path is undefined, this method returns\n`undefined` (this method does not throw when dereferencing undefined\npaths).",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1834,
                  "column": 6
                },
                "end": {
                  "line": 1836,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to the value\n  to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `users.12.name` or `['users', 12, 'name']`)."
                },
                {
                  "name": "root",
                  "type": "Object=",
                  "description": "Root object from which the path is evaluated."
                }
              ],
              "return": {
                "type": "*",
                "desc": "Value at the path, or `undefined` if any part of the path\n  is undefined."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "set",
              "description": "Convenience method for setting a value to a path and notifying any\nelements bound to the same path.\n\nNote, if any part in the path except for the last is undefined,\nthis method does nothing (this method does not throw when\ndereferencing undefined paths).",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1859,
                  "column": 6
                },
                "end": {
                  "line": 1869,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to the value\n  to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `'users.12.name'` or `['users', 12, 'name']`)."
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "Value to set at the specified path."
                },
                {
                  "name": "root",
                  "type": "Object=",
                  "description": "Root object from which the path is evaluated.\n  When specified, no notification will occur."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "push",
              "description": "Adds items onto the end of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1885,
                  "column": 6
                },
                "end": {
                  "line": 1894,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to array."
                },
                {
                  "name": "items",
                  "type": "...*",
                  "rest": true,
                  "description": "Items to push onto array"
                }
              ],
              "return": {
                "type": "number",
                "desc": "New length of the array."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "pop",
              "description": "Removes an item from the end of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1909,
                  "column": 6
                },
                "end": {
                  "line": 1918,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to array."
                }
              ],
              "return": {
                "type": "*",
                "desc": "Item that was removed."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "splice",
              "description": "Starting from the start index specified, removes 0 or more items\nfrom the array and inserts 0 or more new items in their place.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.splice`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1937,
                  "column": 6
                },
                "end": {
                  "line": 1974,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to array."
                },
                {
                  "name": "start",
                  "type": "number",
                  "description": "Index from which to start removing/inserting."
                },
                {
                  "name": "deleteCount",
                  "type": "number",
                  "description": "Number of items to remove."
                },
                {
                  "name": "items",
                  "type": "...*",
                  "rest": true,
                  "description": "Items to insert into array."
                }
              ],
              "return": {
                "type": "Array",
                "desc": "Array of removed items."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "shift",
              "description": "Removes an item from the beginning of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 1989,
                  "column": 6
                },
                "end": {
                  "line": 1998,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to array."
                }
              ],
              "return": {
                "type": "*",
                "desc": "Item that was removed."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "unshift",
              "description": "Adds items onto the beginning of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2014,
                  "column": 6
                },
                "end": {
                  "line": 2022,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "(string | !Array.<(string | number)>)",
                  "description": "Path to array."
                },
                {
                  "name": "items",
                  "type": "...*",
                  "rest": true,
                  "description": "Items to insert info array"
                }
              ],
              "return": {
                "type": "number",
                "desc": "New length of the array."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "notifyPath",
              "description": "Notify that a path has changed.\n\nExample:\n\n    this.item.user.name = 'Bob';\n    this.notifyPath('item.user.name');",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2037,
                  "column": 6
                },
                "end": {
                  "line": 2054,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "path",
                  "type": "string",
                  "description": "Path that should be notified."
                },
                {
                  "name": "value",
                  "type": "*=",
                  "description": "Value at the path (optional)."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_createReadOnlyProperty",
              "description": "Equivalent to static `createReadOnlyProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2067,
                  "column": 6
                },
                "end": {
                  "line": 2074,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                },
                {
                  "name": "protectedSetter",
                  "type": "boolean=",
                  "description": "Creates a custom protected setter\n  when `true`."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_createPropertyObserver",
              "description": "Equivalent to static `createPropertyObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2088,
                  "column": 6
                },
                "end": {
                  "line": 2098,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                },
                {
                  "name": "method",
                  "type": "(string | function (*, *))",
                  "description": "Function or name of observer method to call"
                },
                {
                  "name": "dynamicFn",
                  "type": "boolean=",
                  "description": "Whether the method name should be included as\n  a dependency to the effect."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_createMethodObserver",
              "description": "Equivalent to static `createMethodObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2111,
                  "column": 6
                },
                "end": {
                  "line": 2117,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "expression",
                  "type": "string",
                  "description": "Method expression"
                },
                {
                  "name": "dynamicFn",
                  "type": "(boolean | Object)=",
                  "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_createNotifyingProperty",
              "description": "Equivalent to static `createNotifyingProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2128,
                  "column": 6
                },
                "end": {
                  "line": 2136,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_createReflectedProperty",
              "description": "Equivalent to static `createReflectedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2147,
                  "column": 6
                },
                "end": {
                  "line": 2160,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_createComputedProperty",
              "description": "Equivalent to static `createComputedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2174,
                  "column": 6
                },
                "end": {
                  "line": 2180,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of computed property to set"
                },
                {
                  "name": "expression",
                  "type": "string",
                  "description": "Method expression"
                },
                {
                  "name": "dynamicFn",
                  "type": "(boolean | Object)=",
                  "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_bindTemplate",
              "description": "Equivalent to static `bindTemplate` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.\n\nThis method may be called on the prototype (for prototypical template\nbinding, to avoid creating accessors every instance) once per prototype,\nand will be called with `runtimeBinding: true` by `_stampTemplate` to\ncreate and link an instance of the template metadata associated with a\nparticular stamping.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2357,
                  "column": 6
                },
                "end": {
                  "line": 2380,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template",
                  "type": "!HTMLTemplateElement",
                  "description": "Template containing binding\n  bindings"
                },
                {
                  "name": "instanceBinding",
                  "type": "boolean=",
                  "description": "When false (default), performs\n  \"prototypical\" binding of the template and overwrites any previously\n  bound template for the class. When true (as passed from\n  `_stampTemplate`), the template info is instanced and linked into\n  the list of bound templates."
                }
              ],
              "return": {
                "type": "!TemplateInfo",
                "desc": "Template metadata object; for `runtimeBinding`,\n  this is an instance of the prototypical template info"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_removeBoundDom",
              "description": "Removes and unbinds the nodes previously contained in the provided\nDocumentFragment returned from `_stampTemplate`.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2459,
                  "column": 6
                },
                "end": {
                  "line": 2480,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "dom",
                  "type": "!StampedTemplate",
                  "description": "DocumentFragment previously returned\n  from `_stampTemplate` associated with the nodes to be removed"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "connectedCallback",
              "description": "Provides a default implementation of the standard Custom Elements\n`connectedCallback`.\n\nThe default implementation enables the property effects system and\nflushes any pending properties, and updates shimmed CSS properties\nwhen using the ShadyCSS scoping/custom properties polyfill.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 527,
                  "column": 6
                },
                "end": {
                  "line": 532,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "disconnectedCallback",
              "description": "Called when the element is removed from a document",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-mixin.html",
                "start": {
                  "line": 215,
                  "column": 6
                },
                "end": {
                  "line": 219,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesMixin"
            },
            {
              "name": "_attachDom",
              "description": "Attaches an element's stamped dom to itself. By default,\nthis method creates a `shadowRoot` and adds the dom to it.\nHowever, this method may be overridden to allow an element\nto put its dom in another location.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 581,
                  "column": 6
                },
                "end": {
                  "line": 597,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "dom",
                  "type": "StampedTemplate",
                  "description": "to attach to the element."
                }
              ],
              "return": {
                "type": "ShadowRoot",
                "desc": "node to which the dom has been attached."
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "updateStyles",
              "description": "When using the ShadyCSS scoping and custom property shim, causes all\nshimmed styles in this element (and its subtree) to be updated\nbased on current custom property values.\n\nThe optional parameter overrides inline custom property styles with an\nobject of properties where the keys are CSS properties, and the values\nare strings.\n\nExample: `this.updateStyles({'--color': 'blue'})`\n\nThese properties are retained unless a value of `null` is set.\n\nNote: This function does not support updating CSS mixins.\nYou can not dynamically change the value of an `@apply`.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 620,
                  "column": 6
                },
                "end": {
                  "line": 624,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "properties",
                  "type": "Object=",
                  "description": "Bag of custom property key/values to\n  apply to this element."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "resolveUrl",
              "description": "Rewrites a given URL relative to a base URL. The base URL defaults to\nthe original location of the document containing the `dom-module` for\nthis element. This method will return the same URL before and after\nbundling.\n\nNote that this function performs no resolution for URLs that start\nwith `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\nURL resolution, use `window.URL`.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 641,
                  "column": 6
                },
                "end": {
                  "line": 646,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "url",
                  "type": "string",
                  "description": "URL to resolve."
                },
                {
                  "name": "base",
                  "type": "string=",
                  "description": "Optional base URL to resolve against, defaults\nto the element's `importPath`"
                }
              ],
              "return": {
                "type": "string",
                "desc": "Rewritten URL relative to base"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "_activated",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 145,
                  "column": 6
                },
                "end": {
                  "line": 150,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "active"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_finishInit",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 152,
                  "column": 6
                },
                "end": {
                  "line": 166,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_translateBuffer",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 168,
                  "column": 6
                },
                "end": {
                  "line": 174,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "up"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_scroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 176,
                  "column": 6
                },
                "end": {
                  "line": 211,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_reset",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 270,
                  "column": 6
                },
                "end": {
                  "line": 289,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_createPool",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 291,
                  "column": 6
                },
                "end": {
                  "line": 325,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_ensureStampedInstance",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 327,
                  "column": 6
                },
                "end": {
                  "line": 340,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "itemWrapper"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_updateClones",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 342,
                  "column": 6
                },
                "end": {
                  "line": 359,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "viewPortOnly"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_isVisible",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 361,
                  "column": 6
                },
                "end": {
                  "line": 364,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                },
                {
                  "name": "container"
                }
              ]
            }
          ],
          "staticMethods": [
            {
              "name": "_parseTemplate",
              "description": "Scans a template to produce template metadata.\n\nTemplate-specific metadata are stored in the object returned, and node-\nspecific metadata are stored in objects in its flattened `nodeInfoList`\narray.  Only nodes in the template that were parsed as nodes of\ninterest contain an object in `nodeInfoList`.  Each `nodeInfo` object\ncontains an `index` (`childNodes` index in parent) and optionally\n`parent`, which points to node info of its parent (including its index).\n\nThe template metadata object returned from this method has the following\nstructure (many fields optional):\n\n```js\n  {\n    // Flattened list of node metadata (for nodes that generated metadata)\n    nodeInfoList: [\n      {\n        // `id` attribute for any nodes with id's for generating `$` map\n        id: {string},\n        // `on-event=\"handler\"` metadata\n        events: [\n          {\n            name: {string},   // event name\n            value: {string},  // handler method name\n          }, ...\n        ],\n        // Notes when the template contained a `<slot>` for shady DOM\n        // optimization purposes\n        hasInsertionPoint: {boolean},\n        // For nested `<template>`` nodes, nested template metadata\n        templateInfo: {object}, // nested template metadata\n        // Metadata to allow efficient retrieval of instanced node\n        // corresponding to this metadata\n        parentInfo: {number},   // reference to parent nodeInfo>\n        parentIndex: {number},  // index in parent's `childNodes` collection\n        infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n      },\n      ...\n    ],\n    // When true, the template had the `strip-whitespace` attribute\n    // or was nested in a template with that setting\n    stripWhitespace: {boolean},\n    // For nested templates, nested template content is moved into\n    // a document fragment stored here; this is an optimization to\n    // avoid the cost of nested template cloning\n    content: {DocumentFragment}\n  }\n```\n\nThis method kicks off a recursive treewalk as follows:\n\n```\n   _parseTemplate <---------------------+\n     _parseTemplateContent              |\n       _parseTemplateNode  <------------|--+\n         _parseTemplateNestedTemplate --+  |\n         _parseTemplateChildNodes ---------+\n         _parseTemplateNodeAttributes\n           _parseTemplateNodeAttribute\n\n```\n\nThese methods may be overridden to add custom metadata about templates\nto either `templateInfo` or `nodeInfo`.\n\nNote that this method may be destructive to the template, in that\ne.g. event annotations may be removed after being noted in the\ntemplate metadata.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 197,
                  "column": 6
                },
                "end": {
                  "line": 208,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template",
                  "type": "!HTMLTemplateElement",
                  "description": "Template to parse"
                },
                {
                  "name": "outerTemplateInfo",
                  "type": "TemplateInfo=",
                  "description": "Template metadata from the outer\n  template, for parsing nested templates"
                }
              ],
              "return": {
                "type": "!TemplateInfo",
                "desc": "Parsed template metadata"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "_parseTemplateContent",
              "description": "Overrides `PropertyAccessors` to add map of dynamic functions on\ntemplate info, for consumption by `PropertyEffects` template binding\ncode. This map determines which method templates should have accessors\ncreated for them.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 657,
                  "column": 6
                },
                "end": {
                  "line": 660,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template"
                },
                {
                  "name": "templateInfo"
                },
                {
                  "name": "nodeInfo"
                }
              ],
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "_parseTemplateNode",
              "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from `TextNode`'s' `textContent`.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2499,
                  "column": 6
                },
                "end": {
                  "line": 2513,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "Node",
                  "description": "Node to parse"
                },
                {
                  "name": "templateInfo",
                  "type": "TemplateInfo",
                  "description": "Template metadata for current template"
                },
                {
                  "name": "nodeInfo",
                  "type": "NodeInfo",
                  "description": "Node metadata for current template node"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_parseTemplateChildNodes",
              "description": "Parses template child nodes for the given root node.\n\nThis method also wraps whitelisted legacy template extensions\n(`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\nwrappers, collapses text nodes, and strips whitespace from the template\nif the `templateInfo.stripWhitespace` setting was provided.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 258,
                  "column": 6
                },
                "end": {
                  "line": 295,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "root",
                  "type": "Node",
                  "description": "Root node whose `childNodes` will be parsed"
                },
                {
                  "name": "templateInfo",
                  "type": "!TemplateInfo",
                  "description": "Template metadata for current template"
                },
                {
                  "name": "nodeInfo",
                  "type": "!NodeInfo",
                  "description": "Node metadata for current template."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "_parseTemplateNestedTemplate",
              "description": "Overrides default `TemplateStamp` implementation to add support for\nbinding the properties that a nested template depends on to the template\nas `_host_<property>`.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2591,
                  "column": 6
                },
                "end": {
                  "line": 2601,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "Node",
                  "description": "Node to parse"
                },
                {
                  "name": "templateInfo",
                  "type": "TemplateInfo",
                  "description": "Template metadata for current template"
                },
                {
                  "name": "nodeInfo",
                  "type": "NodeInfo",
                  "description": "Node metadata for current template node"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_parseTemplateNodeAttributes",
              "description": "Parses template node attributes and adds node metadata to `nodeInfo`\nfor nodes of interest.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 333,
                  "column": 6
                },
                "end": {
                  "line": 342,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "Element",
                  "description": "Node to parse"
                },
                {
                  "name": "templateInfo",
                  "type": "TemplateInfo",
                  "description": "Template metadata for current template"
                },
                {
                  "name": "nodeInfo",
                  "type": "NodeInfo",
                  "description": "Node metadata for current template."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "_parseTemplateNodeAttribute",
              "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from attributes.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2534,
                  "column": 6
                },
                "end": {
                  "line": 2575,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "Element",
                  "description": "Node to parse"
                },
                {
                  "name": "templateInfo",
                  "type": "TemplateInfo",
                  "description": "Template metadata for current template"
                },
                {
                  "name": "nodeInfo",
                  "type": "NodeInfo",
                  "description": "Node metadata for current template node"
                },
                {
                  "name": "name",
                  "type": "string",
                  "description": "Attribute name"
                },
                {
                  "name": "value",
                  "type": "string",
                  "description": "Attribute value"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_contentForTemplate",
              "description": "Returns the `content` document fragment for a given template.\n\nFor nested templates, Polymer performs an optimization to cache nested\ntemplate content to avoid the cost of cloning deeply nested templates.\nThis method retrieves the cached content for a given template.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/template-stamp.html",
                "start": {
                  "line": 388,
                  "column": 6
                },
                "end": {
                  "line": 391,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template",
                  "type": "HTMLTemplateElement",
                  "description": "Template to retrieve `content` for"
                }
              ],
              "return": {
                "type": "DocumentFragment",
                "desc": "Content fragment"
              },
              "inheritedFrom": "Polymer.TemplateStamp"
            },
            {
              "name": "createProperties",
              "description": "Override of PropertiesChanged createProperties to create accessors\nand property effects for all of the properties.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 325,
                  "column": 7
                },
                "end": {
                  "line": 329,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "props"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "attributeNameForProperty",
              "description": "Returns an attribute name that corresponds to the given property.\nThe attribute name is the lowercased property name. Override to\ncustomize this mapping.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-changed.html",
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 79,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property to convert"
                }
              ],
              "return": {
                "type": "string",
                "desc": "Attribute name corresponding to the given property."
              },
              "inheritedFrom": "Polymer.PropertiesChanged"
            },
            {
              "name": "typeForProperty",
              "description": "Overrides `PropertiesChanged` method to return type specified in the\nstatic `properties` object for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-mixin.html",
                "start": {
                  "line": 180,
                  "column": 6
                },
                "end": {
                  "line": 183,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Name of property"
                }
              ],
              "return": {
                "type": "*",
                "desc": "Type to which to deserialize attribute"
              },
              "inheritedFrom": "Polymer.PropertiesMixin"
            },
            {
              "name": "createPropertiesForAttributes",
              "description": "Generates property accessors for all attributes in the standard\nstatic `observedAttributes` array.\n\nAttribute names are mapped to property names using the `dash-case` to\n`camelCase` convention",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-accessors.html",
                "start": {
                  "line": 128,
                  "column": 6
                },
                "end": {
                  "line": 133,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyAccessors"
            },
            {
              "name": "addPropertyEffect",
              "description": "Ensures an accessor exists for the specified property, and adds\nto a list of \"property effects\" that will run when the accessor for\nthe specified property is set.  Effects are grouped by \"type\", which\nroughly corresponds to a phase in effect processing.  The effect\nmetadata should be in the following form:\n\n    {\n      fn: effectFunction, // Reference to function to call to perform effect\n      info: { ... }       // Effect metadata passed to function\n      trigger: {          // Optional triggering metadata; if not provided\n        name: string      // the property is treated as a wildcard\n        structured: boolean\n        wildcard: boolean\n      }\n    }\n\nEffects are called from `_propertiesChanged` in the following order by\ntype:\n\n1. COMPUTE\n2. PROPAGATE\n3. REFLECT\n4. OBSERVE\n5. NOTIFY\n\nEffect functions are called with the following signature:\n\n    effectFunction(inst, path, props, oldProps, info, hasPaths)",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2220,
                  "column": 6
                },
                "end": {
                  "line": 2222,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property that should trigger the effect"
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
                },
                {
                  "name": "effect",
                  "type": "Object=",
                  "description": "Effect metadata object"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "createPropertyObserver",
              "description": "Creates a single-property observer for the given property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2234,
                  "column": 6
                },
                "end": {
                  "line": 2236,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                },
                {
                  "name": "method",
                  "type": "(string | function (*, *))",
                  "description": "Function or name of observer method to call"
                },
                {
                  "name": "dynamicFn",
                  "type": "boolean=",
                  "description": "Whether the method name should be included as\n  a dependency to the effect."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "createMethodObserver",
              "description": "Creates a multi-property \"method observer\" based on the provided\nexpression, which should be a string in the form of a normal JavaScript\nfunction signature: `'methodName(arg1, [..., argn])'`.  Each argument\nshould correspond to a property or path in the context of this\nprototype (or instance), or may be a literal string or number.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2251,
                  "column": 6
                },
                "end": {
                  "line": 2253,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "expression",
                  "type": "string",
                  "description": "Method expression"
                },
                {
                  "name": "dynamicFn",
                  "type": "(boolean | Object)=",
                  "description": "Boolean or object map indicating"
                }
              ],
              "return": {
                "type": "void",
                "desc": "whether method names should be included as a dependency to the effect."
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "createNotifyingProperty",
              "description": "Causes the setter for the given property to dispatch `<property>-changed`\nevents to notify of changes to the property.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2263,
                  "column": 6
                },
                "end": {
                  "line": 2265,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "createReadOnlyProperty",
              "description": "Creates a read-only accessor for the given property.\n\nTo set the property, use the protected `_setProperty` API.\nTo create a custom protected setter (e.g. `_setMyProp()` for\nproperty `myProp`), pass `true` for `protectedSetter`.\n\nNote, if the property will have other property effects, this method\nshould be called first, before adding other effects.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2283,
                  "column": 6
                },
                "end": {
                  "line": 2285,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                },
                {
                  "name": "protectedSetter",
                  "type": "boolean=",
                  "description": "Creates a custom protected setter\n  when `true`."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "createReflectedProperty",
              "description": "Causes the setter for the given property to reflect the property value\nto a (dash-cased) attribute of the same name.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2295,
                  "column": 6
                },
                "end": {
                  "line": 2297,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Property name"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "createComputedProperty",
              "description": "Creates a computed property whose value is set to the result of the\nmethod described by the given `expression` each time one or more\narguments to the method changes.  The expression should be a string\nin the form of a normal JavaScript function signature:\n`'methodName(arg1, [..., argn])'`",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2313,
                  "column": 6
                },
                "end": {
                  "line": 2315,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "string",
                  "description": "Name of computed property to set"
                },
                {
                  "name": "expression",
                  "type": "string",
                  "description": "Method expression"
                },
                {
                  "name": "dynamicFn",
                  "type": "(boolean | Object)=",
                  "description": "Boolean or object map indicating whether\n  method names should be included as a dependency to the effect."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "bindTemplate",
              "description": "Parses the provided template to ensure binding effects are created\nfor them, and then ensures property accessors are created for any\ndependent properties in the template.  Binding effects for bound\ntemplates are stored in a linked list on the instance so that\ntemplates can be efficiently stamped and unstamped.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2329,
                  "column": 6
                },
                "end": {
                  "line": 2331,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template",
                  "type": "!HTMLTemplateElement",
                  "description": "Template containing binding\n  bindings"
                }
              ],
              "return": {
                "type": "!TemplateInfo",
                "desc": "Template metadata object"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_addTemplatePropertyEffect",
              "description": "Adds a property effect to the given template metadata, which is run\nat the \"propagate\" stage of `_propertiesChanged` when the template\nhas been bound to the element via `_bindTemplate`.\n\nThe `effect` object should match the format in `_addPropertyEffect`.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2395,
                  "column": 6
                },
                "end": {
                  "line": 2401,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "templateInfo",
                  "type": "Object",
                  "description": "Template metadata to add effect to"
                },
                {
                  "name": "prop",
                  "type": "string",
                  "description": "Property that should trigger the effect"
                },
                {
                  "name": "effect",
                  "type": "Object=",
                  "description": "Effect metadata object"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_parseBindings",
              "description": "Called to parse text in a template (either attribute values or\ntextContent) into binding metadata.\n\nAny overrides of this method should return an array of binding part\nmetadata  representing one or more bindings found in the provided text\nand any \"literal\" text in between.  Any non-literal parts will be passed\nto `_evaluateBinding` when any dependencies change.  The only required\nfields of each \"part\" in the returned array are as follows:\n\n- `dependencies` - Array containing trigger metadata for each property\n  that should trigger the binding to update\n- `literal` - String containing text if the part represents a literal;\n  in this case no `dependencies` are needed\n\nAdditional metadata for use by `_evaluateBinding` may be provided in\neach part object as needed.\n\nThe default implementation handles the following types of bindings\n(one or more may be intermixed with literal strings):\n- Property binding: `[[prop]]`\n- Path binding: `[[object.prop]]`\n- Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n- Two-way property or path bindings (supports negation):\n  `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n- Inline computed method (supports negation):\n  `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2636,
                  "column": 6
                },
                "end": {
                  "line": 2701,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "text",
                  "type": "string",
                  "description": "Text to parse from attribute or textContent"
                },
                {
                  "name": "templateInfo",
                  "type": "Object",
                  "description": "Current template metadata"
                }
              ],
              "return": {
                "type": "Array.<!BindingPart>",
                "desc": "Array of binding part metadata"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "_evaluateBinding",
              "description": "Called to evaluate a previously parsed binding part based on a set of\none or more changed dependencies.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/property-effects.html",
                "start": {
                  "line": 2717,
                  "column": 6
                },
                "end": {
                  "line": 2734,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "inst",
                  "type": "this",
                  "description": "Element that should be used as scope for\n  binding dependencies"
                },
                {
                  "name": "part",
                  "type": "BindingPart",
                  "description": "Binding part metadata"
                },
                {
                  "name": "path",
                  "type": "string",
                  "description": "Property/path that triggered this effect"
                },
                {
                  "name": "props",
                  "type": "Object",
                  "description": "Bag of current property changes"
                },
                {
                  "name": "oldProps",
                  "type": "Object",
                  "description": "Bag of previous values for changed properties"
                },
                {
                  "name": "hasPaths",
                  "type": "boolean",
                  "description": "True with `props` contains one or more paths"
                }
              ],
              "return": {
                "type": "*",
                "desc": "Value the binding part evaluated to"
              },
              "inheritedFrom": "Polymer.PropertyEffects"
            },
            {
              "name": "finalize",
              "description": "Finalizes an element definition, including ensuring any super classes\nare also finalized. This includes ensuring property\naccessors exist on the element prototype. This method calls\n`_finalizeClass` to finalize each constructor in the prototype chain.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/properties-mixin.html",
                "start": {
                  "line": 128,
                  "column": 6
                },
                "end": {
                  "line": 137,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.PropertiesMixin"
            },
            {
              "name": "_finalizeClass",
              "description": "Override of PropertiesMixin _finalizeClass to create observers and\nfind the template.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 293,
                  "column": 5
                },
                "end": {
                  "line": 316,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "createObservers",
              "description": "Creates observers for the given `observers` array.\nLeverages `PropertyEffects` to create observers.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 342,
                  "column": 6
                },
                "end": {
                  "line": 347,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "observers",
                  "type": "Object",
                  "description": "Array of observer descriptors for\n  this class"
                },
                {
                  "name": "dynamicFns",
                  "type": "Object",
                  "description": "Object containing keys for any properties\n  that are functions and should trigger the effect when the function\n  reference is changed"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "_processStyleText",
              "description": "Gather style text for a style element in the template.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 490,
                  "column": 6
                },
                "end": {
                  "line": 492,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "cssText",
                  "type": "string",
                  "description": "Text containing styling to process"
                },
                {
                  "name": "baseURI",
                  "type": "string",
                  "description": "Base URI to rebase CSS paths against"
                }
              ],
              "return": {
                "type": "string",
                "desc": "The processed CSS text"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            },
            {
              "name": "_finalizeTemplate",
              "description": "Configures an element `proto` to function with a given `template`.\nThe element name `is` and extends `ext` must be specified for ShadyCSS\nstyle scoping.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/element-mixin.html",
                "start": {
                  "line": 503,
                  "column": 6
                },
                "end": {
                  "line": 514,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "is",
                  "type": "string",
                  "description": "Tag name (or type extension name) for this element"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.ElementMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 365,
              "column": 5
            }
          },
          "privacy": "private",
          "superclass": "Polymer.Element",
          "name": "Vaadin.InfiniteScrollerElement",
          "attributes": [
            {
              "name": "buffer-size",
              "description": "Count of individual items in each buffer.\nThe scroller has 2 buffers altogether so bufferSize of 20\nwill result in 40 buffered DOM items in total.\nChanging after initialization not supported.",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 10
                },
                "end": {
                  "line": 85,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "active",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 10
                },
                "end": {
                  "line": 113,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-infinite-scroller"
        },
        {
          "description": "",
          "summary": "",
          "path": "src/vaadin-date-picker-overlay-content.html",
          "properties": [
            {
              "name": "selectedDate",
              "type": "Date | null | undefined",
              "description": "The value for this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 244,
                  "column": 12
                },
                "end": {
                  "line": 247,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "focusedDate",
              "type": "Date | null | undefined",
              "description": "Date value which is focused using keyboard.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 252,
                  "column": 12
                },
                "end": {
                  "line": 256,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_focusedDateChanged\"",
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "_focusedMonthDate",
              "type": "number | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 258,
                  "column": 12
                },
                "end": {
                  "line": 258,
                  "column": 37
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              }
            },
            {
              "name": "initialPosition",
              "type": "Date | null | undefined",
              "description": "Date which should be visible when there is no value selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 263,
                  "column": 12
                },
                "end": {
                  "line": 266,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_initialPositionChanged\"",
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "_originDate",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 268,
                  "column": 12
                },
                "end": {
                  "line": 270,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_visibleMonthIndex",
              "type": "number | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 272,
                  "column": 12
                },
                "end": {
                  "line": 272,
                  "column": 38
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              }
            },
            {
              "name": "_desktopMode",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 274,
                  "column": 12
                },
                "end": {
                  "line": 274,
                  "column": 33
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_translateX",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 276,
                  "column": 12
                },
                "end": {
                  "line": 278,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_translateXChanged\""
                }
              }
            },
            {
              "name": "_yearScrollerWidth",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 280,
                  "column": 12
                },
                "end": {
                  "line": 282,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "50"
            },
            {
              "name": "i18n",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 284,
                  "column": 12
                },
                "end": {
                  "line": 286,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 288,
                  "column": 12
                },
                "end": {
                  "line": 290,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_ignoreTaps",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 292,
                  "column": 12
                },
                "end": {
                  "line": 292,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_notTapping",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 294,
                  "column": 12
                },
                "end": {
                  "line": 294,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "minDate",
              "type": "Date | null | undefined",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 299,
                  "column": 12
                },
                "end": {
                  "line": 299,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "maxDate",
              "type": "Date | null | undefined",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 304,
                  "column": 12
                },
                "end": {
                  "line": 304,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "_focused",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 306,
                  "column": 12
                },
                "end": {
                  "line": 306,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "label",
              "type": "string | null | undefined",
              "description": "Input label",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 311,
                  "column": 12
                },
                "end": {
                  "line": 311,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 315,
                  "column": 8
                },
                "end": {
                  "line": 322,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 331,
                  "column": 8
                },
                "end": {
                  "line": 337,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "announceFocusedDate",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 339,
                  "column": 8
                },
                "end": {
                  "line": 363,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "focusCancel",
              "description": "Focuses the cancel button",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 368,
                  "column": 8
                },
                "end": {
                  "line": 370,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "scrollToDate",
              "description": "Scrolls the list to the given Date.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 375,
                  "column": 8
                },
                "end": {
                  "line": 377,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "animate"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_focusedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 379,
                  "column": 8
                },
                "end": {
                  "line": 381,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_isCurrentYear",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 383,
                  "column": 8
                },
                "end": {
                  "line": 385,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "yearsFromNow"
                }
              ]
            },
            {
              "name": "_isSelectedYear",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 387,
                  "column": 8
                },
                "end": {
                  "line": 391,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "yearsFromNow"
                },
                {
                  "name": "selectedDate"
                }
              ]
            },
            {
              "name": "revealDate",
              "description": "Scrolls the month and year scrollers enough to reveal the given date.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 396,
                  "column": 8
                },
                "end": {
                  "line": 410,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onOverlayFocus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 412,
                  "column": 8
                },
                "end": {
                  "line": 414,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onOverlayBlur",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 416,
                  "column": 8
                },
                "end": {
                  "line": 418,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_initialPositionChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 420,
                  "column": 8
                },
                "end": {
                  "line": 422,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "initialPosition"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_repositionYearScroller",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 424,
                  "column": 8
                },
                "end": {
                  "line": 427,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_repositionMonthScroller",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 429,
                  "column": 8
                },
                "end": {
                  "line": 432,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onMonthScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 434,
                  "column": 8
                },
                "end": {
                  "line": 437,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onYearScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 439,
                  "column": 8
                },
                "end": {
                  "line": 442,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onYearScrollTouchStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 444,
                  "column": 8
                },
                "end": {
                  "line": 449,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onMonthScrollTouchStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 451,
                  "column": 8
                },
                "end": {
                  "line": 453,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_doIgnoreTaps",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 455,
                  "column": 8
                },
                "end": {
                  "line": 459,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_formatDisplayed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 461,
                  "column": 8
                },
                "end": {
                  "line": 467,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "formatDate"
                },
                {
                  "name": "label"
                }
              ]
            },
            {
              "name": "_onTodayTap",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 469,
                  "column": 8
                },
                "end": {
                  "line": 479,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_scrollToCurrentMonth",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 481,
                  "column": 8
                },
                "end": {
                  "line": 487,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_showClear",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 489,
                  "column": 8
                },
                "end": {
                  "line": 491,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedDate"
                }
              ]
            },
            {
              "name": "_onYearTap",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 493,
                  "column": 8
                },
                "end": {
                  "line": 499,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_scrollToPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 501,
                  "column": 8
                },
                "end": {
                  "line": 557,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "targetPosition"
                },
                {
                  "name": "animate"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_limit",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 559,
                  "column": 8
                },
                "end": {
                  "line": 561,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "range"
                }
              ]
            },
            {
              "name": "_handleTrack",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 563,
                  "column": 8
                },
                "end": {
                  "line": 580,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_track",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 582,
                  "column": 8
                },
                "end": {
                  "line": 606,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_toggleAnimateClass",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 608,
                  "column": 8
                },
                "end": {
                  "line": 614,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "enable"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_toggleYearScroller",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 616,
                  "column": 8
                },
                "end": {
                  "line": 618,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_openYearScroller",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 620,
                  "column": 8
                },
                "end": {
                  "line": 623,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_closeYearScroller",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 625,
                  "column": 8
                },
                "end": {
                  "line": 628,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_isYearScrollerVisible",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 630,
                  "column": 8
                },
                "end": {
                  "line": 632,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_translateXChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 634,
                  "column": 8
                },
                "end": {
                  "line": 639,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "x"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_yearAfterXYears",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 641,
                  "column": 8
                },
                "end": {
                  "line": 645,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index"
                }
              ]
            },
            {
              "name": "_yearAfterXMonths",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 647,
                  "column": 8
                },
                "end": {
                  "line": 649,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "months"
                }
              ]
            },
            {
              "name": "_dateAfterXMonths",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 651,
                  "column": 8
                },
                "end": {
                  "line": 656,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "months"
                }
              ]
            },
            {
              "name": "_differenceInMonths",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 658,
                  "column": 8
                },
                "end": {
                  "line": 661,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date1"
                },
                {
                  "name": "date2"
                }
              ]
            },
            {
              "name": "_differenceInYears",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 663,
                  "column": 8
                },
                "end": {
                  "line": 665,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date1"
                },
                {
                  "name": "date2"
                }
              ]
            },
            {
              "name": "_clear",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 667,
                  "column": 8
                },
                "end": {
                  "line": 669,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_close",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 671,
                  "column": 8
                },
                "end": {
                  "line": 679,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_cancel",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 681,
                  "column": 8
                },
                "end": {
                  "line": 684,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 686,
                  "column": 8
                },
                "end": {
                  "line": 688,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_eventKey",
              "description": "Keyboard Navigation",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 693,
                  "column": 8
                },
                "end": {
                  "line": 702,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_onKeydown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 704,
                  "column": 8
                },
                "end": {
                  "line": 798,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_currentlyFocusedDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 800,
                  "column": 8
                },
                "end": {
                  "line": 802,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_moveFocusByDays",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 804,
                  "column": 8
                },
                "end": {
                  "line": 830,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "days"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_moveFocusByMonths",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 832,
                  "column": 8
                },
                "end": {
                  "line": 863,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "months"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_moveFocusInsideMonth",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 865,
                  "column": 8
                },
                "end": {
                  "line": 891,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                },
                {
                  "name": "property"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_dateAllowed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 893,
                  "column": 8
                },
                "end": {
                  "line": 895,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ]
            },
            {
              "name": "_isTodayAllowed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 897,
                  "column": 8
                },
                "end": {
                  "line": 904,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ]
            },
            {
              "name": "_stopPropagation",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 906,
                  "column": 8
                },
                "end": {
                  "line": 908,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 6
            },
            "end": {
              "line": 909,
              "column": 7
            }
          },
          "privacy": "private",
          "superclass": "HTMLElement",
          "name": "Vaadin.DatePickerOverlayContentElement",
          "attributes": [
            {
              "name": "selected-date",
              "description": "The value for this element.",
              "sourceRange": {
                "start": {
                  "line": 244,
                  "column": 12
                },
                "end": {
                  "line": 247,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "focused-date",
              "description": "Date value which is focused using keyboard.",
              "sourceRange": {
                "start": {
                  "line": 252,
                  "column": 12
                },
                "end": {
                  "line": 256,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "initial-position",
              "description": "Date which should be visible when there is no value selected.",
              "sourceRange": {
                "start": {
                  "line": 263,
                  "column": 12
                },
                "end": {
                  "line": 266,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "i18n",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 284,
                  "column": 12
                },
                "end": {
                  "line": 286,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            },
            {
              "name": "show-week-numbers",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 288,
                  "column": 12
                },
                "end": {
                  "line": 290,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "min-date",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "sourceRange": {
                "start": {
                  "line": 299,
                  "column": 12
                },
                "end": {
                  "line": 299,
                  "column": 25
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "max-date",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "sourceRange": {
                "start": {
                  "line": 304,
                  "column": 12
                },
                "end": {
                  "line": 304,
                  "column": 25
                }
              },
              "metadata": {},
              "type": "Date | null | undefined"
            },
            {
              "name": "label",
              "description": "Input label",
              "sourceRange": {
                "start": {
                  "line": 311,
                  "column": 12
                },
                "end": {
                  "line": 311,
                  "column": 25
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "scroll-animation-finished",
              "description": "Fired when the scroller reaches the target scrolling position.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "selected-date-changed",
              "description": "Fired when the `selectedDate` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "focused-date-changed",
              "description": "Fired when the `focusedDate` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-date-picker-overlay-content"
        },
        {
          "description": "`<vaadin-date-picker-light>` is a customizable version of the `<vaadin-date-picker>` providing\nonly the scrollable month calendar view and leaving the input field definition to the user.\n\nTo create a custom input field, you need to add a child element which has a two-way\ndata-bindable property representing the input value. The property name is expected\nto be `bindValue` by default. See the example below for a simplest possible example\nusing an `<input>` element extended with `iron-input`.\n\n```html\n<vaadin-date-picker-light>\n  <iron-input>\n    <input/>\n  </iron-input>\n</vaadin-date-picker-light>\n```\n\nIf you are using other custom input fields like `<paper-input>`, you\nneed to define the name of value property using the `attrForValue` property.\n\n```html\n<vaadin-date-picker-light attr-for-value=\"value\">\n  <paper-input label=\"Birthday\">\n  </paper-input>\n</vaadin-date-picker-light>\n```\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description | Theme for Element\n----------------|----------------|----------------\n`overlay-content` | The overlay element | vaadin-date-picker-light\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-date-picker-light.html",
          "properties": [
            {
              "name": "_inputElement",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 365,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_nativeInput",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 367,
                  "column": 4
                },
                "end": {
                  "line": 375,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_selectedDate",
              "type": "Date | null | undefined",
              "description": "The current selected date.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 27,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusedDate",
              "type": "Date | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 29,
                  "column": 8
                },
                "end": {
                  "line": 29,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "value",
              "type": "String",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "required",
              "type": "boolean | null | undefined",
              "description": "Set to true to mark the input as required.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "name",
              "type": "string | null | undefined",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "initialPosition",
              "type": "string | null | undefined",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "label",
              "type": "string | null | undefined",
              "description": "The label for this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "opened",
              "type": "boolean | null | undefined",
              "description": "Set true to open the date selector overlay.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_openedChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean | null | undefined",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreen",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 93,
                  "column": 8
                },
                "end": {
                  "line": 96,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_fullscreenChanged\""
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreenMediaQuery",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 98,
                  "column": 8
                },
                "end": {
                  "line": 100,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"(max-width: 420px), (max-height: 420px)\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_touchPrevented",
              "type": "Array | null | undefined",
              "description": "'touch' to value 'auto' in order to prevent them from clipping the dropdown. iOS only.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 104,
                  "column": 8
                },
                "end": {
                  "line": 104,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "i18n",
              "type": "Object | null | undefined",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Object` as\n              // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n              formatDate: d => {\n                // returns a string representation of the given\n                // object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              // Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 182,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "min",
              "type": "String",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 241,
                  "column": 8
                },
                "end": {
                  "line": 244,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_minChanged\"",
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "max",
              "type": "String",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_maxChanged\"",
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_minDate",
              "type": "Date | null | undefined",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 263,
                  "column": 8
                },
                "end": {
                  "line": 267,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_maxDate",
              "type": "Date | null | undefined",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 272,
                  "column": 8
                },
                "end": {
                  "line": 275,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_noInput",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 277,
                  "column": 8
                },
                "end": {
                  "line": 280,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_ios",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 282,
                  "column": 8
                },
                "end": {
                  "line": 285,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_ignoreAnnounce",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 287,
                  "column": 8
                },
                "end": {
                  "line": 289,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusOverlayOnOpen",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 291,
                  "column": 8
                },
                "end": {
                  "line": 291,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_inputValue",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 8
                },
                "end": {
                  "line": 132,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              }
            },
            {
              "name": "attrForValue",
              "type": "string | null | undefined",
              "description": "Name of the two-way data-bindable property representing the\nvalue of the custom input field.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"bind-value\""
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 305,
                  "column": 4
                },
                "end": {
                  "line": 317,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 322,
                  "column": 4
                },
                "end": {
                  "line": 326,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 331,
                  "column": 4
                },
                "end": {
                  "line": 337,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "open",
              "description": "Opens the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 342,
                  "column": 4
                },
                "end": {
                  "line": 346,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_close",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 348,
                  "column": 4
                },
                "end": {
                  "line": 354,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "close",
              "description": "Closes the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 359,
                  "column": 4
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_parseDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 377,
                  "column": 4
                },
                "end": {
                  "line": 389,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "str"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_isNoInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 391,
                  "column": 4
                },
                "end": {
                  "line": 393,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_formatISO",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 395,
                  "column": 4
                },
                "end": {
                  "line": 399,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 401,
                  "column": 4
                },
                "end": {
                  "line": 407,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_selectedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 409,
                  "column": 4
                },
                "end": {
                  "line": 421,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 423,
                  "column": 4
                },
                "end": {
                  "line": 431,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_updateHasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 433,
                  "column": 4
                },
                "end": {
                  "line": 439,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_handleDateChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 455,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property"
                },
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 457,
                  "column": 4
                },
                "end": {
                  "line": 462,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_minChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 464,
                  "column": 4
                },
                "end": {
                  "line": 466,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_maxChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 468,
                  "column": 4
                },
                "end": {
                  "line": 470,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_updateAlignmentAndPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 472,
                  "column": 4
                },
                "end": {
                  "line": 504,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreenChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 506,
                  "column": 4
                },
                "end": {
                  "line": 510,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onOverlayOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 512,
                  "column": 4
                },
                "end": {
                  "line": 556,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventWebkitOverflowScrollingTouch",
              "description": "ancestor container with -webkit-overflow-scrolling: touch;",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 560,
                  "column": 4
                },
                "end": {
                  "line": 574,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onOverlayClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 576,
                  "column": 4
                },
                "end": {
                  "line": 615,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriately.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 623,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "Value to validate. Optional, defaults to user's input value."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriately"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nOverride the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 636,
                  "column": 4
                },
                "end": {
                  "line": 654,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "Value to validate. Optional, defaults to the selected date."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 656,
                  "column": 4
                },
                "end": {
                  "line": 660,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 662,
                  "column": 4
                },
                "end": {
                  "line": 668,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusAndSelect",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 670,
                  "column": 4
                },
                "end": {
                  "line": 673,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 675,
                  "column": 4
                },
                "end": {
                  "line": 679,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a"
                },
                {
                  "name": "b"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 681,
                  "column": 4
                },
                "end": {
                  "line": 683,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_eventKey",
              "description": "Keyboard Navigation",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 688,
                  "column": 4
                },
                "end": {
                  "line": 697,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_isValidDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 699,
                  "column": 4
                },
                "end": {
                  "line": 701,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "d"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onKeydown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 703,
                  "column": 4
                },
                "end": {
                  "line": 756,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_validateInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 758,
                  "column": 4
                },
                "end": {
                  "line": 762,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onUserInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 764,
                  "column": 4
                },
                "end": {
                  "line": 769,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_userInputValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 771,
                  "column": 4
                },
                "end": {
                  "line": 785,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_announceFocusedDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 787,
                  "column": 4
                },
                "end": {
                  "line": 791,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "_focusedDate"
                },
                {
                  "name": "opened"
                },
                {
                  "name": "_ignoreAnnounce"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_input",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 8
                },
                "end": {
                  "line": 122,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.DatePickerLightElement",
          "attributes": [
            {
              "name": "value",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "required",
              "description": "Set to true to mark the input as required.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "initial-position",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "label",
              "description": "The label for this element.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "opened",
              "description": "Set true to open the date selector overlay.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "show-week-numbers",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Object` as\n              // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n              formatDate: d => {\n                // returns a string representation of the given\n                // object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              // Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 182,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "min",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 241,
                  "column": 8
                },
                "end": {
                  "line": 244,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "max",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "attr-for-value",
              "description": "Name of the two-way data-bindable property representing the\nvalue of the custom input field.",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 12
                },
                "end": {
                  "line": 114,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "Fired when the user commits a value change.",
              "metadata": {},
              "inheritedFrom": "Vaadin.DatePickerMixin"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "start": {
                  "line": 24,
                  "column": 4
                },
                "end": {
                  "line": 24,
                  "column": 17
                }
              }
            }
          ],
          "tagname": "vaadin-date-picker-light",
          "mixins": [
            "Vaadin.ThemableMixin",
            "Vaadin.DatePickerMixin"
          ]
        },
        {
          "description": "`<vaadin-date-picker>` is a date selection field which includes a scrollable\nmonth calendar view.\n```html\n<vaadin-date-picker label=\"Birthday\"></vaadin-date-picker>\n```\n```js\ndatePicker.value = '2016-03-02';\n```\nWhen the selected `value` is changed, a `value-changed` event is triggered.\n\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description | Theme for Element\n----------------|----------------|----------------\n`text-field` | Input element | vaadin-date-picker\n`clear-button` | Clear button | vaadin-date-picker\n`toggle-button` | Toggle button | vaadin-date-picker\n`overlay-content` | The overlay element | vaadin-date-picker\n`overlay-header` | Fullscreen mode header | vaadin-date-picker-overlay-content\n`label` | Fullscreen mode value/label | vaadin-date-picker-overlay-content\n`clear-button` | Fullscreen mode clear button | vaadin-date-picker-overlay-content\n`toggle-button` | Fullscreen mode toggle button | vaadin-date-picker-overlay-content\n`years-toggle-button` | Fullscreen mode years scroller toggle | vaadin-date-picker-overlay-content\n`months` | Months scroller | vaadin-date-picker-overlay-content\n`years` | Years scroller | vaadin-date-picker-overlay-content\n`toolbar` | Footer bar with buttons | vaadin-date-picker-overlay-content\n`today-button` | Today button | vaadin-date-picker-overlay-content\n`cancel-button` | Cancel button | vaadin-date-picker-overlay-content\n`month` | Month calendar | vaadin-date-picker-overlay-content\n`year-number` | Year number | vaadin-date-picker-overlay-content\n`year-separator` | Year separator | vaadin-date-picker-overlay-content\n`month-header` | Month title | vaadin-month-calendar\n`weekdays` | Weekday container | vaadin-month-calendar\n`weekday` | Weekday element | vaadin-month-calendar\n`week-numbers` | Week numbers container | vaadin-month-calendar\n`week-number` | Week number element | vaadin-month-calendar\n`date` | Date element | vaadin-month-calendar\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n\nThe following state attributes are available for styling:\n\nAttribute    | Description | Part name\n-------------|-------------|------------\n`invalid` | Set when the element is invalid | :host\n`opened` | Set when the date selector overlay is opened | :host\n`readonly` | Set when the element is readonly | :host\n`disabled` | Set when the element is disabled | :host\n`today` | Set on the date corresponding to the current day | date\n`focused` | Set on the focused date | date\n`disabled` | Set on the date out of the allowed range | date\n`selected` | Set on the selected date | date\n\nIf you want to replace the default input field with a custom implementation, you should use the\n[`<vaadin-date-picker-light>`](#vaadin-date-picker-light) element.",
          "summary": "",
          "path": "src/vaadin-date-picker.html",
          "properties": [
            {
              "name": "focusElement",
              "type": "?",
              "description": "Focussable element used by vaadin-control-state-mixin\n         ",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 309,
                  "column": 8
                },
                "end": {
                  "line": 311,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "autofocus",
              "type": "boolean | null | undefined",
              "description": "Specify that this control should have input focus when the page loads.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 52,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_previousTabIndex",
              "type": "number | null | undefined",
              "description": "Stores the previous value of tabindex attribute of the disabled element",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "type": "boolean | null | undefined",
              "description": "Set to true to disable this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 202,
                  "column": 12
                },
                "end": {
                  "line": 206,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_isShiftTabbing",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_inputElement",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 365,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_nativeInput",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 367,
                  "column": 4
                },
                "end": {
                  "line": 375,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_selectedDate",
              "type": "Date | null | undefined",
              "description": "The current selected date.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 27,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusedDate",
              "type": "Date | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 29,
                  "column": 8
                },
                "end": {
                  "line": 29,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "value",
              "type": "String",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "required",
              "type": "boolean | null | undefined",
              "description": "Set to true to mark the input as required.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "name",
              "type": "string | null | undefined",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "initialPosition",
              "type": "string | null | undefined",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "label",
              "type": "string | null | undefined",
              "description": "The label for this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "opened",
              "type": "boolean | null | undefined",
              "description": "Set true to open the date selector overlay.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_openedChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean | null | undefined",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreen",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 93,
                  "column": 8
                },
                "end": {
                  "line": 96,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_fullscreenChanged\""
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreenMediaQuery",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 98,
                  "column": 8
                },
                "end": {
                  "line": 100,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"(max-width: 420px), (max-height: 420px)\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_touchPrevented",
              "type": "Array | null | undefined",
              "description": "'touch' to value 'auto' in order to prevent them from clipping the dropdown. iOS only.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 104,
                  "column": 8
                },
                "end": {
                  "line": 104,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "i18n",
              "type": "Object | null | undefined",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Object` as\n              // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n              formatDate: d => {\n                // returns a string representation of the given\n                // object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              // Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 182,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "min",
              "type": "String",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 241,
                  "column": 8
                },
                "end": {
                  "line": 244,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_minChanged\"",
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "max",
              "type": "String",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_maxChanged\"",
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_minDate",
              "type": "Date | null | undefined",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 263,
                  "column": 8
                },
                "end": {
                  "line": 267,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_maxDate",
              "type": "Date | null | undefined",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 272,
                  "column": 8
                },
                "end": {
                  "line": 275,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_noInput",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 277,
                  "column": 8
                },
                "end": {
                  "line": 280,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_ios",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 282,
                  "column": 8
                },
                "end": {
                  "line": 285,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_ignoreAnnounce",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 287,
                  "column": 8
                },
                "end": {
                  "line": 289,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusOverlayOnOpen",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 291,
                  "column": 8
                },
                "end": {
                  "line": 291,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_inputValue",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 298,
                  "column": 8
                },
                "end": {
                  "line": 300,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              }
            },
            {
              "name": "errorMessage",
              "type": "string | null | undefined",
              "description": "The error message to display when the input is invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 211,
                  "column": 12
                },
                "end": {
                  "line": 211,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "placeholder",
              "type": "string | null | undefined",
              "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 12
                },
                "end": {
                  "line": 216,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "readonly",
              "type": "boolean | null | undefined",
              "description": "Set to true to make this element read-only.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 221,
                  "column": 12
                },
                "end": {
                  "line": 225,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "invalid",
              "type": "boolean | null | undefined",
              "description": "This property is set to true when the control value invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 230,
                  "column": 12
                },
                "end": {
                  "line": 235,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_userInputValue",
              "type": "string | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 237,
                  "column": 12
                },
                "end": {
                  "line": 237,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 247,
                  "column": 8
                },
                "end": {
                  "line": 257,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 322,
                  "column": 4
                },
                "end": {
                  "line": 326,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 331,
                  "column": 4
                },
                "end": {
                  "line": 337,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_setFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 141,
                  "column": 4
                },
                "end": {
                  "line": 155,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focused"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 157,
                  "column": 4
                },
                "end": {
                  "line": 159,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeyupListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 161,
                  "column": 4
                },
                "end": {
                  "line": 163,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 662,
                  "column": 4
                },
                "end": {
                  "line": 668,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "focus",
              "description": "Moving the focus from the host element causes firing of the blur event what leads to problems in IE.",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 187,
                  "column": 4
                },
                "end": {
                  "line": 194,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "blur",
              "description": "Native bluring in the host element does nothing because it does not have the focus.\nIn chrome it works, but not in FF.",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 201,
                  "column": 4
                },
                "end": {
                  "line": 204,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_disabledChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 206,
                  "column": 4
                },
                "end": {
                  "line": 219,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "disabled"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_tabindexChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 221,
                  "column": 4
                },
                "end": {
                  "line": 237,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "tabindex"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "open",
              "description": "Opens the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 342,
                  "column": 4
                },
                "end": {
                  "line": 346,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_close",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 348,
                  "column": 4
                },
                "end": {
                  "line": 354,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "close",
              "description": "Closes the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 359,
                  "column": 4
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_parseDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 377,
                  "column": 4
                },
                "end": {
                  "line": 389,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "str"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_isNoInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 391,
                  "column": 4
                },
                "end": {
                  "line": 393,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_formatISO",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 395,
                  "column": 4
                },
                "end": {
                  "line": 399,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 401,
                  "column": 4
                },
                "end": {
                  "line": 407,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_selectedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 409,
                  "column": 4
                },
                "end": {
                  "line": 421,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 423,
                  "column": 4
                },
                "end": {
                  "line": 431,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_updateHasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 433,
                  "column": 4
                },
                "end": {
                  "line": 439,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_handleDateChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 455,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property"
                },
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 457,
                  "column": 4
                },
                "end": {
                  "line": 462,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_minChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 464,
                  "column": 4
                },
                "end": {
                  "line": 466,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_maxChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 468,
                  "column": 4
                },
                "end": {
                  "line": 470,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_updateAlignmentAndPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 472,
                  "column": 4
                },
                "end": {
                  "line": 504,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreenChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 506,
                  "column": 4
                },
                "end": {
                  "line": 510,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onOverlayOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 512,
                  "column": 4
                },
                "end": {
                  "line": 556,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventWebkitOverflowScrollingTouch",
              "description": "ancestor container with -webkit-overflow-scrolling: touch;",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 560,
                  "column": 4
                },
                "end": {
                  "line": 574,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onOverlayClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 576,
                  "column": 4
                },
                "end": {
                  "line": 615,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriately.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 623,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "Value to validate. Optional, defaults to user's input value."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriately"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nOverride the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 636,
                  "column": 4
                },
                "end": {
                  "line": 654,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "Value to validate. Optional, defaults to the selected date."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 656,
                  "column": 4
                },
                "end": {
                  "line": 660,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusAndSelect",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 670,
                  "column": 4
                },
                "end": {
                  "line": 673,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 675,
                  "column": 4
                },
                "end": {
                  "line": 679,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a"
                },
                {
                  "name": "b"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 681,
                  "column": 4
                },
                "end": {
                  "line": 683,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_eventKey",
              "description": "Keyboard Navigation",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 688,
                  "column": 4
                },
                "end": {
                  "line": 697,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_isValidDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 699,
                  "column": 4
                },
                "end": {
                  "line": 701,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "d"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onKeydown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 703,
                  "column": 4
                },
                "end": {
                  "line": 756,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_validateInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 758,
                  "column": 4
                },
                "end": {
                  "line": 762,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onUserInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 764,
                  "column": 4
                },
                "end": {
                  "line": 769,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_userInputValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 771,
                  "column": 4
                },
                "end": {
                  "line": 785,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_announceFocusedDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 787,
                  "column": 4
                },
                "end": {
                  "line": 791,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "_focusedDate"
                },
                {
                  "name": "opened"
                },
                {
                  "name": "_ignoreAnnounce"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_addEventListenerToNode",
              "description": "Add the event listener to the node if it is a gestures event.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/gesture-event-listeners.html",
                "start": {
                  "line": 55,
                  "column": 6
                },
                "end": {
                  "line": 59,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "!Node",
                  "description": "Node to add event listener to"
                },
                {
                  "name": "eventName",
                  "type": "string",
                  "description": "Name of event"
                },
                {
                  "name": "handler",
                  "type": "function (!Event): void",
                  "description": "Listener function to add"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.GestureEventListeners"
            },
            {
              "name": "_removeEventListenerFromNode",
              "description": "Remove the event listener to the node if it is a gestures event.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../polymer/lib/mixins/gesture-event-listeners.html",
                "start": {
                  "line": 69,
                  "column": 6
                },
                "end": {
                  "line": 73,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node",
                  "type": "!Node",
                  "description": "Node to remove event listener from"
                },
                {
                  "name": "eventName",
                  "type": "string",
                  "description": "Name of event"
                },
                {
                  "name": "handler",
                  "type": "function (!Event): void",
                  "description": "Listener function to remove"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Polymer.GestureEventListeners"
            },
            {
              "name": "_onVaadinOverlayClose",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 259,
                  "column": 8
                },
                "end": {
                  "line": 268,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_clear",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 270,
                  "column": 8
                },
                "end": {
                  "line": 277,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_clearTouchend",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 279,
                  "column": 8
                },
                "end": {
                  "line": 283,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_toggle",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 285,
                  "column": 8
                },
                "end": {
                  "line": 288,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_input",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 290,
                  "column": 8
                },
                "end": {
                  "line": 292,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getAriaExpanded",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 302,
                  "column": 8
                },
                "end": {
                  "line": 304,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ]
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.DatePickerElement",
          "attributes": [
            {
              "name": "autofocus",
              "description": "Specify that this control should have input focus when the page loads.",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 52,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "description": "Set to true to disable this element.",
              "sourceRange": {
                "start": {
                  "line": 202,
                  "column": 12
                },
                "end": {
                  "line": 206,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "value",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "required",
              "description": "Set to true to mark the input as required.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "initial-position",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "label",
              "description": "The label for this element.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "opened",
              "description": "Set true to open the date selector overlay.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "show-week-numbers",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Object` as\n              // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n              formatDate: d => {\n                // returns a string representation of the given\n                // object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              // Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 182,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object | null | undefined",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "min",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 241,
                  "column": 8
                },
                "end": {
                  "line": 244,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "max",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "error-message",
              "description": "The error message to display when the input is invalid.",
              "sourceRange": {
                "start": {
                  "line": 211,
                  "column": 12
                },
                "end": {
                  "line": 211,
                  "column": 32
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "placeholder",
              "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 12
                },
                "end": {
                  "line": 216,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "readonly",
              "description": "Set to true to make this element read-only.",
              "sourceRange": {
                "start": {
                  "line": 221,
                  "column": 12
                },
                "end": {
                  "line": 225,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "invalid",
              "description": "This property is set to true when the control value invalid.",
              "sourceRange": {
                "start": {
                  "line": 230,
                  "column": 12
                },
                "end": {
                  "line": 235,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "Fired when the user commits a value change.",
              "metadata": {},
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "type": "CustomEvent",
              "name": "invalid-changed",
              "description": "Fired when the `invalid` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "prefix",
              "range": {
                "start": {
                  "line": 75,
                  "column": 6
                },
                "end": {
                  "line": 75,
                  "column": 47
                }
              }
            }
          ],
          "tagname": "vaadin-date-picker",
          "mixins": [
            "Vaadin.ElementMixin",
            "Vaadin.ControlStateMixin",
            "Vaadin.ThemableMixin",
            "Vaadin.DatePickerMixin",
            "Polymer.GestureEventListeners"
          ]
        }
      ],
      "mixins": [
        {
          "description": "",
          "summary": "",
          "path": "src/vaadin-date-picker-mixin.html",
          "properties": [
            {
              "name": "_inputElement",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 365,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "_nativeInput",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 367,
                  "column": 4
                },
                "end": {
                  "line": 375,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "_selectedDate",
              "type": "Date | null | undefined",
              "description": "The current selected date.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 27,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "_focusedDate",
              "type": "Date | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 29,
                  "column": 8
                },
                "end": {
                  "line": 29,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              }
            },
            {
              "name": "value",
              "type": "String",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "required",
              "type": "boolean | null | undefined",
              "description": "Set to true to mark the input as required.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "name",
              "type": "string | null | undefined",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "initialPosition",
              "type": "string | null | undefined",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "label",
              "type": "string | null | undefined",
              "description": "The label for this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "opened",
              "type": "boolean | null | undefined",
              "description": "Set true to open the date selector overlay.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_openedChanged\"",
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean | null | undefined",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_fullscreen",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 93,
                  "column": 8
                },
                "end": {
                  "line": 96,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_fullscreenChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_fullscreenMediaQuery",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 98,
                  "column": 8
                },
                "end": {
                  "line": 100,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"(max-width: 420px), (max-height: 420px)\""
            },
            {
              "name": "_touchPrevented",
              "type": "Array | null | undefined",
              "description": "'touch' to value 'auto' in order to prevent them from clipping the dropdown. iOS only.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 104,
                  "column": 8
                },
                "end": {
                  "line": 104,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "i18n",
              "type": "Object | null | undefined",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Object` as\n              // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n              formatDate: d => {\n                // returns a string representation of the given\n                // object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              // Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 182,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "min",
              "type": "String",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 241,
                  "column": 8
                },
                "end": {
                  "line": 244,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_minChanged\"",
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "max",
              "type": "String",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_maxChanged\"",
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "_minDate",
              "type": "Date | null | undefined",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 263,
                  "column": 8
                },
                "end": {
                  "line": 267,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "_maxDate",
              "type": "Date | null | undefined",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 272,
                  "column": 8
                },
                "end": {
                  "line": 275,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Date"
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "_noInput",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 277,
                  "column": 8
                },
                "end": {
                  "line": 280,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_ios",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 282,
                  "column": 8
                },
                "end": {
                  "line": 285,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "_ignoreAnnounce",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 287,
                  "column": 8
                },
                "end": {
                  "line": 289,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true"
            },
            {
              "name": "_focusOverlayOnOpen",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 291,
                  "column": 8
                },
                "end": {
                  "line": 291,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 305,
                  "column": 4
                },
                "end": {
                  "line": 317,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 322,
                  "column": 4
                },
                "end": {
                  "line": 326,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 331,
                  "column": 4
                },
                "end": {
                  "line": 337,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "open",
              "description": "Opens the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 342,
                  "column": 4
                },
                "end": {
                  "line": 346,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_close",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 348,
                  "column": 4
                },
                "end": {
                  "line": 354,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "close",
              "description": "Closes the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 359,
                  "column": 4
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_parseDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 377,
                  "column": 4
                },
                "end": {
                  "line": 389,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "str"
                }
              ]
            },
            {
              "name": "_isNoInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 391,
                  "column": 4
                },
                "end": {
                  "line": 393,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_formatISO",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 395,
                  "column": 4
                },
                "end": {
                  "line": 399,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 401,
                  "column": 4
                },
                "end": {
                  "line": 407,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_selectedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 409,
                  "column": 4
                },
                "end": {
                  "line": 421,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_focusedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 423,
                  "column": 4
                },
                "end": {
                  "line": 431,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_updateHasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 433,
                  "column": 4
                },
                "end": {
                  "line": 439,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_handleDateChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 455,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property"
                },
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 457,
                  "column": 4
                },
                "end": {
                  "line": 462,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_minChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 464,
                  "column": 4
                },
                "end": {
                  "line": 466,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_maxChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 468,
                  "column": 4
                },
                "end": {
                  "line": 470,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_updateAlignmentAndPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 472,
                  "column": 4
                },
                "end": {
                  "line": 504,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_fullscreenChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 506,
                  "column": 4
                },
                "end": {
                  "line": 510,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onOverlayOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 512,
                  "column": 4
                },
                "end": {
                  "line": 556,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_preventWebkitOverflowScrollingTouch",
              "description": "ancestor container with -webkit-overflow-scrolling: touch;",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 560,
                  "column": 4
                },
                "end": {
                  "line": 574,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "name": "_onOverlayClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 576,
                  "column": 4
                },
                "end": {
                  "line": 615,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriately.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 623,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "Value to validate. Optional, defaults to user's input value."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriately"
              }
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nOverride the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 636,
                  "column": 4
                },
                "end": {
                  "line": 654,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "Value to validate. Optional, defaults to the selected date."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid"
              }
            },
            {
              "name": "_onScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 656,
                  "column": 4
                },
                "end": {
                  "line": 660,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 662,
                  "column": 4
                },
                "end": {
                  "line": 668,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_focusAndSelect",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 670,
                  "column": 4
                },
                "end": {
                  "line": 673,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 675,
                  "column": 4
                },
                "end": {
                  "line": 679,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a"
                },
                {
                  "name": "b"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 681,
                  "column": 4
                },
                "end": {
                  "line": 683,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_eventKey",
              "description": "Keyboard Navigation",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 688,
                  "column": 4
                },
                "end": {
                  "line": 697,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_isValidDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 699,
                  "column": 4
                },
                "end": {
                  "line": 701,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "d"
                }
              ]
            },
            {
              "name": "_onKeydown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 703,
                  "column": 4
                },
                "end": {
                  "line": 756,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_validateInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 758,
                  "column": 4
                },
                "end": {
                  "line": 762,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onUserInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 764,
                  "column": 4
                },
                "end": {
                  "line": 769,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_userInputValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 771,
                  "column": 4
                },
                "end": {
                  "line": 785,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_announceFocusedDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 787,
                  "column": 4
                },
                "end": {
                  "line": 791,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "_focusedDate"
                },
                {
                  "name": "opened"
                },
                {
                  "name": "_ignoreAnnounce"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 798,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "Vaadin.DatePickerMixin",
          "attributes": [
            {
              "name": "value",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String"
            },
            {
              "name": "required",
              "description": "Set to true to mark the input as required.",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "initial-position",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "label",
              "description": "The label for this element.",
              "sourceRange": {
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "opened",
              "description": "Set true to open the date selector overlay.",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 8
                },
                "end": {
                  "line": 82,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "show-week-numbers",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "sourceRange": {
                "start": {
                  "line": 89,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Object` as\n              // date string. Object is in the format `{ day: ..., month: ..., year: ... }`\n              formatDate: d => {\n                // returns a string representation of the given\n                // object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              // Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // an `Object` in the format `{ day: ..., month: ..., year: ... }`.\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "sourceRange": {
                "start": {
                  "line": 182,
                  "column": 8
                },
                "end": {
                  "line": 230,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            },
            {
              "name": "min",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "start": {
                  "line": 241,
                  "column": 8
                },
                "end": {
                  "line": 244,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String"
            },
            {
              "name": "max",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "start": {
                  "line": 255,
                  "column": 8
                },
                "end": {
                  "line": 258,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "String"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "Fired when the user commits a value change.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ],
      "classes": [
        {
          "description": "",
          "summary": "",
          "path": "src/vaadin-date-picker-helper.html",
          "properties": [],
          "methods": [],
          "staticMethods": [
            {
              "name": "_getISOWeekNumber",
              "description": "Get ISO 8601 week number for the given date.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 16,
                  "column": 4
                },
                "end": {
                  "line": 40,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ],
              "return": {
                "type": "Number",
                "desc": "Week number"
              }
            },
            {
              "name": "_dateEquals",
              "description": "Check if two dates are equal.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 49,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date1",
                  "type": "Date"
                },
                {
                  "name": "date2",
                  "type": "Date"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if the given date objects refer to the same date"
              }
            },
            {
              "name": "_dateAllowed",
              "description": "Check if the given date is in the range of allowed dates.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 4
                },
                "end": {
                  "line": 66,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date",
                  "type": "Date",
                  "description": "The date to check"
                },
                {
                  "name": "min",
                  "type": "Date",
                  "description": "Range start"
                },
                {
                  "name": "max",
                  "type": "Date",
                  "description": "Range end"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if the date is in the range"
              }
            },
            {
              "name": "_getClosestDate",
              "description": "Get closest date from array of dates.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 75,
                  "column": 4
                },
                "end": {
                  "line": 90,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date",
                  "type": "Date",
                  "description": "The date to compare dates with"
                },
                {
                  "name": "dates",
                  "type": "Array",
                  "description": "Array of date objects"
                }
              ],
              "return": {
                "type": "Date",
                "desc": "Closest date"
              }
            },
            {
              "name": "_extractDateParts",
              "description": "Extracts the basic component parts of a date (day, month and year)\nto the expected format.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 4
                },
                "end": {
                  "line": 102,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 9,
              "column": 28
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "Vaadin.DatePickerHelper"
        }
      ]
    }
  ]
}
