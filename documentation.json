{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "vaadin-date-picker.html",
        "start": {
          "line": 271,
          "column": 6
        },
        "end": {
          "line": 271,
          "column": 42
        }
      },
      "elements": [
        {
          "description": "`<vaadin-date-picker>` is a date selection field which includes a scrollable\nmonth calendar view.\n```html\n<vaadin-date-picker label=\"Birthday\"></vaadin-date-picker>\n```\n```js\ndatePicker.value = '2016-03-02';\n```\nWhen the selected `value` is changed, a `value-changed` event is triggered.\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--vaadin-date-picker-overlay` | Mixin applied to the overlay | `{}`\n`--vaadin-date-picker-yearscroller` | Mixin applied to the year scroller | `{}`\n`--vaadin-date-picker-yearscroller-indicator` | Mixin applied to the year scroller indicator | `{}`\n`--vaadin-date-picker-calendar-icon` | Mixin applied to the calendar icon | `{}`\n`--vaadin-date-picker-clear-icon` | Mixin applied to the clear icon | `{}`\n`--vaadin-date-picker-scrollers-fade` | Mixin applied to the scrollers fade element | `{}`\n`--vaadin-date-picker-header` | Mixin applied to the picker header | `{}`\n`--vaadin-date-picker-toolbar` | Mixin applied to the picker toolbar | `{}`\n`--vaadin-date-picker-toolbar-icon` | Mixin applied to the picker toolbar icon | `{}`\n`--vaadin-date-picker-footer` | Mixin applied to the picker footer | `{}`\n`--vaadin-date-picker-calendar` | Mixin applied to a month calendar element | `{}`\n`--vaadin-date-picker-calendar-title` | Mixin applied to a month calendar title | `{}`\n`--vaadin-date-picker-calendar-cell` | Mixin applied to a month calendar cell | `{}`\n`--vaadin-date-picker-calendar-date-cell` | Mixin applied to a month calendar date cell | `{}`\n`--vaadin-date-picker-calendar-weekday-cell` | Mixin applied to a month calendar weekday cell | `{}`\n`--vaadin-date-picker-calendar-cell-today` | Mixin applied to a month calendar today cell | `{}`\n`--vaadin-date-picker-calendar-cell-selected` | Mixin applied to a month calendar selected cell | `{}`\n`--vaadin-date-picker-calendar-cell-focused` | Mixin applied to a month calendar focused cell | `{}`\n`--vaadin-date-picker-calendar-cell-today-selected` | Mixin applied to a month calendar selected today cell | `{}`\n`--vaadin-date-picker-calendar-cell-disabled` | Mixin applied to a month calendar disabled cell | `{}`\n`--vaadin-date-picker-calendar-weeknumber-cell` | Mixin applied to a month calendar weeknumber cell | `{}`\n`--vaadin-date-picker-calendar-focused-cell-focused` | Mixin applied to a focused month calendar focused cell | `{}`\n\nSee paper-input-container documentation for styling the included input fields\n\nIf you want to replace the default input field with a custom implementation, you should use the\n[`<vaadin-date-picker-light>`](#vaadin-date-picker-light) element.",
          "summary": "",
          "path": "vaadin-date-picker.html",
          "properties": [
            {
              "name": "_selectedDate",
              "type": "Date",
              "description": "The current selected date.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 27,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusedDate",
              "type": "Date",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 29,
                  "column": 8
                },
                "end": {
                  "line": 29,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "value",
              "type": "string",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\""
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "required",
              "type": "boolean",
              "description": "Set to true to mark the input as required.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "hasValue",
              "type": "boolean",
              "description": "Indicates whether this date picker has a value.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 65,
                  "column": 8
                },
                "end": {
                  "line": 69,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "initialPosition",
              "type": "string",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 76,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "label",
              "type": "string",
              "description": "The label for this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 81,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "opened",
              "type": "boolean",
              "description": "Set true to open the date selector overlay.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 99,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreen",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 101,
                  "column": 8
                },
                "end": {
                  "line": 104,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_fullscreenChanged\""
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreenMediaQuery",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 106,
                  "column": 8
                },
                "end": {
                  "line": 108,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"(max-width: 420px), (max-height: 420px)\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_touchPrevented",
              "type": "Array",
              "description": "'touch' to value 'auto' in order to prevent them from clipping the dropdown. iOS only.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 112,
                  "column": 8
                },
                "end": {
                  "line": 112,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "i18n",
              "type": "Object",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Date` object as\n              // date string.\n              formatDate: d => {\n                // returns a string representation of the given\n                // Date object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to a `Date`\n              // object. Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // a Date object\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 190,
                  "column": 8
                },
                "end": {
                  "line": 246,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "min",
              "type": "string",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 257,
                  "column": 8
                },
                "end": {
                  "line": 260,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_minChanged\""
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "max",
              "type": "string",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 271,
                  "column": 8
                },
                "end": {
                  "line": 274,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_maxChanged\""
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_minDate",
              "type": "Date",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 279,
                  "column": 8
                },
                "end": {
                  "line": 283,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_maxDate",
              "type": "Date",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 288,
                  "column": 8
                },
                "end": {
                  "line": 291,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_noInput",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 293,
                  "column": 8
                },
                "end": {
                  "line": 296,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_ios",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 298,
                  "column": 8
                },
                "end": {
                  "line": 301,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_ignoreAnnounce",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 303,
                  "column": 8
                },
                "end": {
                  "line": 305,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusOverlayOnOpen",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 307,
                  "column": 8
                },
                "end": {
                  "line": 307,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_documentPointerEvents",
              "type": "string",
              "description": "When datepicker is opened, we're setting body pointer-events to none\nto make the datepicker behave in \"modal\" way. This variable keeps the\nprevious state of body pointer-events to restore it when datepicker is\nclosed.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 315,
                  "column": 8
                },
                "end": {
                  "line": 315,
                  "column": 38
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "Set to true to disable this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 184,
                  "column": 12
                },
                "end": {
                  "line": 188,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "The error message to display when the input is invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 193,
                  "column": 12
                },
                "end": {
                  "line": 193,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "placeholder",
              "type": "string",
              "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 198,
                  "column": 12
                },
                "end": {
                  "line": 198,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "readonly",
              "type": "boolean",
              "description": "Set to true to make this element read-only.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 203,
                  "column": 12
                },
                "end": {
                  "line": 207,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "invalid",
              "type": "boolean",
              "description": "This property is set to true when the control value invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 12
                },
                "end": {
                  "line": 217,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_userInputValue",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 219,
                  "column": 12
                },
                "end": {
                  "line": 219,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 328,
                  "column": 4
                },
                "end": {
                  "line": 338,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "open",
              "description": "Opens the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 343,
                  "column": 4
                },
                "end": {
                  "line": 348,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_close",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 350,
                  "column": 4
                },
                "end": {
                  "line": 356,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "close",
              "description": "Closes the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 361,
                  "column": 4
                },
                "end": {
                  "line": 363,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_parseDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 379,
                  "column": 4
                },
                "end": {
                  "line": 391,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "str"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_isNoInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 393,
                  "column": 4
                },
                "end": {
                  "line": 395,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_formatISO",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 397,
                  "column": 4
                },
                "end": {
                  "line": 401,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_selectedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 403,
                  "column": 4
                },
                "end": {
                  "line": 410,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 412,
                  "column": 4
                },
                "end": {
                  "line": 419,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                },
                {
                  "name": "formatDate"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_hasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 421,
                  "column": 4
                },
                "end": {
                  "line": 423,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_handleDateChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 425,
                  "column": 4
                },
                "end": {
                  "line": 439,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property"
                },
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 443,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_minChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 445,
                  "column": 4
                },
                "end": {
                  "line": 447,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_maxChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 449,
                  "column": 4
                },
                "end": {
                  "line": 451,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_updateAlignmentAndPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 453,
                  "column": 4
                },
                "end": {
                  "line": 473,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_fullscreenChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 475,
                  "column": 4
                },
                "end": {
                  "line": 479,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onOverlayOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 481,
                  "column": 4
                },
                "end": {
                  "line": 524,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventWebkitOverflowScrollingTouch",
              "description": "ancestor container with -webkit-overflow-scrolling: touch;",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 528,
                  "column": 4
                },
                "end": {
                  "line": 542,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onOverlayClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 544,
                  "column": 4
                },
                "end": {
                  "line": 582,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 584,
                  "column": 4
                },
                "end": {
                  "line": 586,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriatelly.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 593,
                  "column": 4
                },
                "end": {
                  "line": 596,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriatelly"
              },
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nOverride the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 603,
                  "column": 4
                },
                "end": {
                  "line": 611,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 613,
                  "column": 4
                },
                "end": {
                  "line": 617,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventCancelOnComponentAccess",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 619,
                  "column": 4
                },
                "end": {
                  "line": 624,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 626,
                  "column": 4
                },
                "end": {
                  "line": 632,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_focusAndSelect",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 634,
                  "column": 4
                },
                "end": {
                  "line": 637,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 639,
                  "column": 4
                },
                "end": {
                  "line": 643,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a"
                },
                {
                  "name": "b"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 645,
                  "column": 4
                },
                "end": {
                  "line": 647,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_eventKey",
              "description": "Keyboard Navigation",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 652,
                  "column": 4
                },
                "end": {
                  "line": 661,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_isValidDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 663,
                  "column": 4
                },
                "end": {
                  "line": 665,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "d"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onKeydown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 667,
                  "column": 4
                },
                "end": {
                  "line": 720,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_validateInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 722,
                  "column": 4
                },
                "end": {
                  "line": 726,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_onUserInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 728,
                  "column": 4
                },
                "end": {
                  "line": 739,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_userInputValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 741,
                  "column": 4
                },
                "end": {
                  "line": 750,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_announceFocusedDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 752,
                  "column": 4
                },
                "end": {
                  "line": 756,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "_focusedDate"
                },
                {
                  "name": "opened"
                },
                {
                  "name": "_ignoreAnnounce"
                }
              ],
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "_clear",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 8
                },
                "end": {
                  "line": 233,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_toggle",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 235,
                  "column": 8
                },
                "end": {
                  "line": 238,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_input",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 240,
                  "column": 8
                },
                "end": {
                  "line": 242,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_computeAlwaysFloatLabel",
              "description": "label and placeholder will go on top of each other if always-float-label isn't set\nThis is the similar behavior as paper-input has:\nPolymerElements/paper-input/blob/d248dad17af3ee46a0701a664e0f304c1619770d/paper-input-behavior.html#L502",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 249,
                  "column": 8
                },
                "end": {
                  "line": 251,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "placeholder"
                }
              ]
            },
            {
              "name": "_getAriaExpanded",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 8
                },
                "end": {
                  "line": 263,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ]
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "privacy": "public",
          "name": "Vaadin.DatePickerElement",
          "attributes": [
            {
              "name": "value",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "required",
              "description": "Set to true to mark the input as required.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "has-value",
              "description": "Indicates whether this date picker has a value.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 65,
                  "column": 8
                },
                "end": {
                  "line": 69,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "initial-position",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 76,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "label",
              "description": "The label for this element.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 81,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "opened",
              "description": "Set true to open the date selector overlay.",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "show-week-numbers",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 99,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Date` object as\n              // date string.\n              formatDate: d => {\n                // returns a string representation of the given\n                // Date object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to a `Date`\n              // object. Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // a Date object\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 190,
                  "column": 8
                },
                "end": {
                  "line": 246,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "min",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 257,
                  "column": 8
                },
                "end": {
                  "line": 260,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "max",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "file": "vaadin-date-picker-mixin.html",
                "start": {
                  "line": 271,
                  "column": 8
                },
                "end": {
                  "line": 274,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string",
              "inheritedFrom": "Vaadin.DatePickerMixin"
            },
            {
              "name": "disabled",
              "description": "Set to true to disable this element.",
              "sourceRange": {
                "start": {
                  "line": 184,
                  "column": 12
                },
                "end": {
                  "line": 188,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "error-message",
              "description": "The error message to display when the input is invalid.",
              "sourceRange": {
                "start": {
                  "line": 193,
                  "column": 12
                },
                "end": {
                  "line": 193,
                  "column": 32
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "placeholder",
              "description": "A placeholder string in addition to the label. If this is set, the label will always float.",
              "sourceRange": {
                "start": {
                  "line": 198,
                  "column": 12
                },
                "end": {
                  "line": 198,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "readonly",
              "description": "Set to true to make this element read-only.",
              "sourceRange": {
                "start": {
                  "line": 203,
                  "column": 12
                },
                "end": {
                  "line": 207,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "invalid",
              "description": "This property is set to true when the control value invalid.",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 12
                },
                "end": {
                  "line": 217,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "invalid-changed",
              "description": "Fired when the `invalid` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-date-picker",
          "mixins": [
            "Vaadin.DatePickerMixin"
          ],
          "superclass": "HTMLElement"
        }
      ],
      "mixins": [
        {
          "description": "",
          "summary": "",
          "path": "vaadin-date-picker-mixin.html",
          "properties": [
            {
              "name": "_selectedDate",
              "type": "Date",
              "description": "The current selected date.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 27,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_focusedDate",
              "type": "Date",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 29,
                  "column": 8
                },
                "end": {
                  "line": 29,
                  "column": 26
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "value",
              "type": "string",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\""
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "required",
              "type": "boolean",
              "description": "Set to true to mark the input as required.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "hasValue",
              "type": "boolean",
              "description": "Indicates whether this date picker has a value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 65,
                  "column": 8
                },
                "end": {
                  "line": 69,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "initialPosition",
              "type": "string",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 31
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "label",
              "type": "string",
              "description": "The label for this element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 81,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "opened",
              "type": "boolean",
              "description": "Set true to open the date selector overlay.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "showWeekNumbers",
              "type": "boolean",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 99,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_fullscreen",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 101,
                  "column": 8
                },
                "end": {
                  "line": 104,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_fullscreenChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_fullscreenMediaQuery",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 106,
                  "column": 8
                },
                "end": {
                  "line": 108,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"(max-width: 420px), (max-height: 420px)\""
            },
            {
              "name": "_touchPrevented",
              "type": "Array",
              "description": "'touch' to value 'auto' in order to prevent them from clipping the dropdown. iOS only.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 112,
                  "column": 8
                },
                "end": {
                  "line": 112,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "i18n",
              "type": "Object",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Date` object as\n              // date string.\n              formatDate: d => {\n                // returns a string representation of the given\n                // Date object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to a `Date`\n              // object. Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // a Date object\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 190,
                  "column": 8
                },
                "end": {
                  "line": 246,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "min",
              "type": "string",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 257,
                  "column": 8
                },
                "end": {
                  "line": 260,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_minChanged\""
                }
              }
            },
            {
              "name": "max",
              "type": "string",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 271,
                  "column": 8
                },
                "end": {
                  "line": 274,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_maxChanged\""
                }
              }
            },
            {
              "name": "_minDate",
              "type": "Date",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 279,
                  "column": 8
                },
                "end": {
                  "line": 283,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            },
            {
              "name": "_maxDate",
              "type": "Date",
              "description": "The latest date that can be selected. All later dates will be disabled.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 288,
                  "column": 8
                },
                "end": {
                  "line": 291,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            },
            {
              "name": "_noInput",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 293,
                  "column": 8
                },
                "end": {
                  "line": 296,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "_ios",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 298,
                  "column": 8
                },
                "end": {
                  "line": 301,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_ignoreAnnounce",
              "type": "?",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 303,
                  "column": 8
                },
                "end": {
                  "line": 305,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "true"
            },
            {
              "name": "_focusOverlayOnOpen",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 307,
                  "column": 8
                },
                "end": {
                  "line": 307,
                  "column": 36
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_documentPointerEvents",
              "type": "string",
              "description": "When datepicker is opened, we're setting body pointer-events to none\nto make the datepicker behave in \"modal\" way. This variable keeps the\nprevious state of body pointer-events to restore it when datepicker is\nclosed.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 315,
                  "column": 8
                },
                "end": {
                  "line": 315,
                  "column": 38
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 328,
                  "column": 4
                },
                "end": {
                  "line": 338,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "open",
              "description": "Opens the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 343,
                  "column": 4
                },
                "end": {
                  "line": 348,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_close",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 350,
                  "column": 4
                },
                "end": {
                  "line": 356,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "close",
              "description": "Closes the dropdown.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 361,
                  "column": 4
                },
                "end": {
                  "line": 363,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_parseDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 379,
                  "column": 4
                },
                "end": {
                  "line": 391,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "str"
                }
              ]
            },
            {
              "name": "_isNoInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 393,
                  "column": 4
                },
                "end": {
                  "line": 395,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_formatISO",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 397,
                  "column": 4
                },
                "end": {
                  "line": 401,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "name": "_selectedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 403,
                  "column": 4
                },
                "end": {
                  "line": 410,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selectedDate"
                },
                {
                  "name": "formatDate"
                }
              ]
            },
            {
              "name": "_focusedDateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 412,
                  "column": 4
                },
                "end": {
                  "line": 419,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focusedDate"
                },
                {
                  "name": "formatDate"
                }
              ]
            },
            {
              "name": "_hasValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 421,
                  "column": 4
                },
                "end": {
                  "line": 423,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_handleDateChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 425,
                  "column": 4
                },
                "end": {
                  "line": 439,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property"
                },
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 441,
                  "column": 4
                },
                "end": {
                  "line": 443,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_minChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 445,
                  "column": 4
                },
                "end": {
                  "line": 447,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_maxChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 449,
                  "column": 4
                },
                "end": {
                  "line": 451,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ]
            },
            {
              "name": "_updateAlignmentAndPosition",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 453,
                  "column": 4
                },
                "end": {
                  "line": 473,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_fullscreenChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 475,
                  "column": 4
                },
                "end": {
                  "line": 479,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onOverlayOpened",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 481,
                  "column": 4
                },
                "end": {
                  "line": 524,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_preventWebkitOverflowScrollingTouch",
              "description": "ancestor container with -webkit-overflow-scrolling: touch;",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 528,
                  "column": 4
                },
                "end": {
                  "line": 542,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "name": "_onOverlayClosed",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 544,
                  "column": 4
                },
                "end": {
                  "line": 582,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 584,
                  "column": 4
                },
                "end": {
                  "line": 586,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid, and sets the `invalid` flag appropriatelly.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 593,
                  "column": 4
                },
                "end": {
                  "line": 596,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid and sets the `invalid` flag appropriatelly"
              }
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)\n\nOverride the `checkValidity` method for custom validations.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 603,
                  "column": 4
                },
                "end": {
                  "line": 611,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_onScroll",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 613,
                  "column": 4
                },
                "end": {
                  "line": 617,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_preventCancelOnComponentAccess",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 619,
                  "column": 4
                },
                "end": {
                  "line": 624,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 626,
                  "column": 4
                },
                "end": {
                  "line": 632,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_focusAndSelect",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 634,
                  "column": 4
                },
                "end": {
                  "line": 637,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setSelectionRange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 639,
                  "column": 4
                },
                "end": {
                  "line": 643,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a"
                },
                {
                  "name": "b"
                }
              ]
            },
            {
              "name": "_preventDefault",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 645,
                  "column": 4
                },
                "end": {
                  "line": 647,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_eventKey",
              "description": "Keyboard Navigation",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 652,
                  "column": 4
                },
                "end": {
                  "line": 661,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_isValidDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 663,
                  "column": 4
                },
                "end": {
                  "line": 665,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "d"
                }
              ]
            },
            {
              "name": "_onKeydown",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 667,
                  "column": 4
                },
                "end": {
                  "line": 720,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_validateInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 722,
                  "column": 4
                },
                "end": {
                  "line": 726,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "date"
                },
                {
                  "name": "min"
                },
                {
                  "name": "max"
                }
              ]
            },
            {
              "name": "_onUserInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 728,
                  "column": 4
                },
                "end": {
                  "line": 739,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_userInputValueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 741,
                  "column": 4
                },
                "end": {
                  "line": 750,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_announceFocusedDate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 752,
                  "column": 4
                },
                "end": {
                  "line": 756,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "_focusedDate"
                },
                {
                  "name": "opened"
                },
                {
                  "name": "_ignoreAnnounce"
                }
              ]
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 757,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "Vaadin.DatePickerMixin",
          "attributes": [
            {
              "name": "value",
              "description": "The value for this element.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "required",
              "description": "Set to true to mark the input as required.",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "name",
              "description": "The name of this element.",
              "sourceRange": {
                "start": {
                  "line": 58,
                  "column": 8
                },
                "end": {
                  "line": 60,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "has-value",
              "description": "Indicates whether this date picker has a value.",
              "sourceRange": {
                "start": {
                  "line": 65,
                  "column": 8
                },
                "end": {
                  "line": 69,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "initial-position",
              "description": "Date which should be visible when there is no value selected.\n\nThe same date formats as for the `value` property are supported.",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 31
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "label",
              "description": "The label for this element.",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 8
                },
                "end": {
                  "line": 81,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "opened",
              "description": "Set true to open the date selector overlay.",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 8
                },
                "end": {
                  "line": 90,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "show-week-numbers",
              "description": "Set true to display ISO-8601 week numbers in the calendar. Notice that\ndisplaying week numbers is only supported when `i18n.firstDayOfWeek`\nis 1 (Monday).",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 99,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              // An array with the full names of months starting\n              // with January.\n              monthNames: [\n                'January', 'February', 'March', 'April', 'May',\n                'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n              ],\n\n              // An array of weekday names starting with Sunday. Used\n              // in screen reader announcements.\n              weekdays: [\n                'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n                'Thursday', 'Friday', 'Saturday'\n              ],\n\n              // An array of short weekday names starting with Sunday.\n              // Displayed in the calendar.\n              weekdaysShort: [\n                'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n              ],\n\n              // An integer indicating the first day of the week\n              // (0 = Sunday, 1 = Monday, etc.).\n              firstDayOfWeek: 0,\n\n              // Used in screen reader announcements along with week\n              // numbers, if they are displayed.\n              week: 'Week',\n\n              // Translation of the Calendar icon button title.\n              calendar: 'Calendar',\n\n              // Translation of the Clear icon button title.\n              clear: 'Clear',\n\n              // Translation of the Today shortcut button text.\n              today: 'Today',\n\n              // Translation of the Cancel button text.\n              cancel: 'Cancel',\n\n              // A function to format given `Date` object as\n              // date string.\n              formatDate: d => {\n                // returns a string representation of the given\n                // Date object in 'MM/DD/YYYY' -format\n              },\n\n              // A function to parse the given text to a `Date`\n              // object. Must properly parse (at least) text\n              // formatted by `formatDate`.\n              // Setting the property to null will disable\n              // keyboard input feature.\n              parseDate: text => {\n                // Parses a string in 'MM/DD/YY', 'MM/DD' or 'DD' -format to\n                // a Date object\n              }\n\n              // A function to format given `monthName` and\n              // `fullYear` integer as calendar title string.\n              formatTitle: (monthName, fullYear) => {\n                return monthName + ' ' + fullYear;\n              }\n            }",
              "sourceRange": {
                "start": {
                  "line": 190,
                  "column": 8
                },
                "end": {
                  "line": 246,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "min",
              "description": "The earliest date that can be selected. All earlier dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "start": {
                  "line": 257,
                  "column": 8
                },
                "end": {
                  "line": 260,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "max",
              "description": "The latest date that can be selected. All later dates will be disabled.\n\nSupported date formats:\n- ISO 8601 `\"YYYY-MM-DD\"` (default)\n- 6-digit extended ISO 8601 `\"+YYYYYY-MM-DD\"`, `\"-YYYYYY-MM-DD\"`",
              "sourceRange": {
                "start": {
                  "line": 271,
                  "column": 8
                },
                "end": {
                  "line": 274,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ],
      "classes": [
        {
          "description": "",
          "summary": "",
          "path": "vaadin-date-picker-helper.html",
          "properties": [],
          "methods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 9,
              "column": 28
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "Vaadin.DatePickerHelper"
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "vaadin-month-calendar.html",
      "properties": [
        {
          "name": "month",
          "type": "Date",
          "description": "A `Date` object defining the month to be displayed. Only year and\nmonth properties are actually used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 12
            },
            "end": {
              "line": 162,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selectedDate",
          "type": "Date",
          "description": "A `Date` object for the currently selected date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 12
            },
            "end": {
              "line": 170,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "focusedDate",
          "type": "Date",
          "description": "A `Date` object for the currently focused date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 12
            },
            "end": {
              "line": 175,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "showWeekNumbers",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "i18n",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 12
            },
            "end": {
              "line": 184,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "ignoreTaps",
          "type": "boolean",
          "description": "Flag stating whether taps on the component should be ignored.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 12
            },
            "end": {
              "line": 189,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_notTapping",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 12
            },
            "end": {
              "line": 191,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "minDate",
          "type": "Date",
          "description": "The earliest date that can be selected. All earlier dates will be disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 199,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "maxDate",
          "type": "Date",
          "description": "The latest date that can be selected. All later dates will be disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 12
            },
            "end": {
              "line": 207,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "_days",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 12
            },
            "end": {
              "line": 212,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_dateEquals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date1"
            },
            {
              "name": "date2"
            }
          ]
        },
        {
          "name": "_dateAllowed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_getTitle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 8
            },
            "end": {
              "line": 235,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "month"
            },
            {
              "name": "monthNames"
            }
          ]
        },
        {
          "name": "_onMonthGridTouchStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 8
            },
            "end": {
              "line": 240,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_dateAdd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "delta"
            }
          ]
        },
        {
          "name": "_applyFirstDayOfWeek",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "weekDayNames"
            },
            {
              "name": "firstDayOfWeek"
            }
          ]
        },
        {
          "name": "_getWeekDayNames",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 8
            },
            "end": {
              "line": 277,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "weekDayNames"
            },
            {
              "name": "weekDayNamesShort"
            },
            {
              "name": "showWeekNumbers"
            },
            {
              "name": "firstDayOfWeek"
            }
          ]
        },
        {
          "name": "_getDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 8
            },
            "end": {
              "line": 281,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "_showWeekNumbersChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 8
            },
            "end": {
              "line": 289,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showWeekNumbers"
            },
            {
              "name": "firstDayOfWeek"
            }
          ]
        },
        {
          "name": "_showWeekSeparator",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 8
            },
            "end": {
              "line": 294,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showWeekNumbers"
            },
            {
              "name": "firstDayOfWeek"
            },
            {
              "name": "index"
            }
          ]
        },
        {
          "name": "_isToday",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 298,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "_getDays",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 8
            },
            "end": {
              "line": 325,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "month"
            },
            {
              "name": "firstDayOfWeek"
            }
          ]
        },
        {
          "name": "_getWeekNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 8
            },
            "end": {
              "line": 340,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "days"
            }
          ]
        },
        {
          "name": "_handleTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 8
            },
            "end": {
              "line": 347,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_preventDefault",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 351,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_getRole",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "_getAriaLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "_getAriaDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 8
            },
            "end": {
              "line": 379,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 147,
          "column": 6
        },
        "end": {
          "line": 380,
          "column": 7
        }
      },
      "privacy": "public",
      "name": "MonthCalendarElement",
      "attributes": [
        {
          "name": "month",
          "description": "A `Date` object defining the month to be displayed. Only year and\nmonth properties are actually used.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 12
            },
            "end": {
              "line": 162,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "selected-date",
          "description": "A `Date` object for the currently selected date.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 12
            },
            "end": {
              "line": 170,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "focused-date",
          "description": "A `Date` object for the currently focused date.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 12
            },
            "end": {
              "line": 175,
              "column": 29
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "show-week-numbers",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "i18n",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 12
            },
            "end": {
              "line": 184,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "ignore-taps",
          "description": "Flag stating whether taps on the component should be ignored.",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 12
            },
            "end": {
              "line": 189,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "min-date",
          "description": "The earliest date that can be selected. All earlier dates will be disabled.",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 199,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "max-date",
          "description": "The latest date that can be selected. All later dates will be disabled.",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 12
            },
            "end": {
              "line": 207,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-date-changed",
          "description": "Fired when the `selectedDate` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vaadin-month-calendar",
      "superclass": "HTMLElement"
    },
    {
      "description": "",
      "summary": "",
      "path": "vaadin-infinite-scroller.html",
      "properties": [
        {
          "name": "itemHeight",
          "type": "number",
          "description": "Height of individual items (in pixels).\nChanging after initialization not supported.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "50"
        },
        {
          "name": "bufferSize",
          "type": "number",
          "description": "Count of individual items in each buffer.\nThe scroller has 2 buffers altogether so bufferSize of 20\nwill result in 40 buffered DOM items in total.\nChanging after initialization not supported.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 10
            },
            "end": {
              "line": 93,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "20"
        },
        {
          "name": "_initialScroll",
          "type": "?",
          "description": "The amount of initial scroll top. Needed in order for the\nuser to be able to scroll backwards.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 101,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "500000"
        },
        {
          "name": "_initialIndex",
          "type": "?",
          "description": "The index/position mapped at _initialScroll point.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 10
            },
            "end": {
              "line": 108,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "0"
        },
        {
          "name": "_buffers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 10
            },
            "end": {
              "line": 110,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_preventScrollEvent",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_bufferHeight",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 114,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_mayHaveMomentum",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_initialized",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 123,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activated\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_stampTemplate",
          "description": "Stamps the provided template and performs instance-time setup for\nPolymer template features, including data bindings, declarative event\nlisteners, and the `this.$` map of `id`'s to nodes.  A document fragment\nis returned containing the stamped DOM, ready for insertion into the\nDOM.\n\nThis method may be called more than once; however note that due to\n`shadycss` polyfill limitations, only styles from templates prepared\nusing `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\nto the shadow root and support CSS custom properties), and note that\n`ShadyCSS.prepareTemplate` may only be called once per element. As such,\nany styles required by in runtime-stamped templates must be included\nin the main element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2235,
              "column": 6
            },
            "end": {
              "line": 2260,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template to stamp"
            }
          ],
          "return": {
            "type": "DocumentFragment",
            "desc": "Cloned template content"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addMethodEventListenerToNode",
          "description": "Adds an event listener by method name for the event provided.\n\nThis method generates a handler function that looks up the method\nname at handling time.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 443,
              "column": 6
            },
            "end": {
              "line": 448,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to add listener on"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "methodName",
              "type": "string",
              "description": "Name of method"
            },
            {
              "name": "context",
              "type": "*=",
              "description": "Context the method will be called on (defaults\n  to `node`)"
            }
          ],
          "return": {
            "type": "Function",
            "desc": "Generated handler function"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 457,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "Function",
              "description": "Listener function to add"
            }
          ],
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 468,
              "column": 6
            },
            "end": {
              "line": 470,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "Function",
              "description": "Listener function to remove"
            }
          ],
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`attributeChangedCallback`.\n\nBy default, attributes declared in `properties` metadata are\ndeserialized using their `type` information to properties of the\nsame name.  \"Dash-cased\" attributes are deserialzed to \"camelCase\"\nproperties.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 716,
              "column": 6
            },
            "end": {
              "line": 724,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeProperties",
          "description": "Overrides the default `Polymer.PropertyAccessors` to ensure class\nmetaprogramming related to property accessors and effects has\ncompleted (calls `finalize`).\n\nIt also initializes any property defaults provided via `value` in\n`properties` metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 576,
              "column": 6
            },
            "end": {
              "line": 616,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeProtoProperties",
          "description": "Overrides `Polymer.PropertyAccessors` implementation to provide a\nmore efficient implementation of initializing properties from\nthe prototype on the instance.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1107,
              "column": 6
            },
            "end": {
              "line": 1111,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_initializeInstanceProperties",
          "description": "Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n`_setProperty`'s `shouldNotify: true`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1119,
              "column": 6
            },
            "end": {
              "line": 1128,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_ensureAttribute",
          "description": "Ensures the element has the given attribute. If it does not,\nassigns the given value to the attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to ensure is set."
            },
            {
              "name": "value",
              "type": "string",
              "description": "of the attribute."
            }
          ],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_attributeToProperty",
          "description": "Deserializes an attribute to its associated property.\n\nThis method calls the `_deserializeValue` method to convert the string to\na typed value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 220,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to deserialize."
            },
            {
              "name": "value",
              "type": "string",
              "description": "of the attribute."
            },
            {
              "name": "type",
              "type": "*",
              "description": "type to deserialize to."
            }
          ],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_propertyToAttribute",
          "description": "Serializes a property to its associated attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 241,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name to reflect."
            },
            {
              "name": "attribute",
              "type": "string=",
              "description": "Attribute name to reflect."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Property value to refect."
            }
          ],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_valueToNodeAttribute",
          "description": "Sets a typed value to an HTML attribute on a node.\n\nThis method calls the `_serializeValue` method to convert the typed\nvalue to a string.  If the `_serializeValue` method returns `undefined`,\nthe attribute will be removed (this is the default for boolean\ntype `false`).",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Element to set attribute to."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to serialize."
            },
            {
              "name": "attribute",
              "type": "string",
              "description": "Attribute name to serialize to."
            }
          ],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_serializeValue",
          "description": "Converts a typed JavaScript value to a string.\n\nThis method is called by Polymer when setting JS property values to\nHTML attributes.  Users may override this method on Polymer element\nprototypes to provide serialization for custom types.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 294,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "*",
              "description": "Property value to serialize."
            }
          ],
          "return": {
            "type": "(string|undefined)",
            "desc": "String serialized from the provided property value."
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_deserializeValue",
          "description": "Converts a string to a typed JavaScript value.\n\nThis method is called by Polymer when reading HTML attribute values to\nJS properties.  Users may override this method on Polymer element\nprototypes to provide deserialization for custom `type`s.  Note,\nthe `type` argument is the value of the `type` field provided in the\n`properties` configuration object for a given property, and is\nby convention the constructor for the type to deserialize.\n\nNote: The return value of `undefined` is used as a sentinel value to\nindicate the attribute should be removed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 313,
              "column": 6
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "string",
              "description": "Attribute value to deserialize."
            },
            {
              "name": "type",
              "type": "*",
              "description": "Type to deserialize the string to."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Typed value deserialized from the provided string."
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_createPropertyAccessor",
          "description": "Creates a setter/getter pair for the named property with its own\nlocal storage.  The getter returns the value in the local storage,\nand the setter calls `_setProperty`, which updates the local storage\nfor the property and enqueues a `_propertiesChanged` callback.\n\nThis method may be called on a prototype or an instance.  Calling\nthis method may overwrite a property value that already exists on\nthe prototype/instance by creating the accessor.  When calling on\na prototype, any overwritten values are saved in `__dataProto`,\nand it is up to the subclasser to decide how/when to set those\nproperties back into the accessor.  When calling on an instance,\nthe overwritten value is set via `_setPendingProperty`, and the\nuser should call `_invalidateProperties` or `_flushProperties`\nfor the values to take effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 379,
              "column": 6
            },
            "end": {
              "line": 395,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "readOnly",
              "type": "boolean=",
              "description": "When true, no setter is created; the\n  protected `_setProperty` function must be used to set the property"
            }
          ],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_hasAccessor",
          "description": "Returns true if this library created an accessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 403,
              "column": 6
            },
            "end": {
              "line": 405,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if an accessor was created"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_setProperty",
          "description": "Overrides base implementation to ensure all accessors set `shouldNotify`\nto true, for per-property notification tracking.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1389,
              "column": 6
            },
            "end": {
              "line": 1393,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setPendingProperty",
          "description": "Overrides the `PropertyAccessors` implementation to introduce special\ndirty check logic depending on the property & value being set:\n\n1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n   Stored in `__dataTemp`, dirty checked against `__dataTemp`\n2. Object set to simple property (e.g. 'prop': {...})\n   Stored in `__dataTemp` and `__data`, dirty checked against\n   `__dataTemp` by default implementation of `_shouldPropertyChange`\n3. Primitive value set to simple property (e.g. 'prop': 42)\n   Stored in `__data`, dirty checked against `__data`\n\nThe dirty-check is important to prevent cycles due to two-way\nnotification, but paths and objects are only dirty checked against any\nprevious value set during this turn via a \"temporary cache\" that is\ncleared when the last `_propertiesChaged` exits. This is so:\na. any cached array paths (e.g. 'array.3.prop') may be invalidated\n   due to array mutations like shift/unshift/splice; this is fine\n   since path changes are dirty-checked at user entry points like `set`\nb. dirty-checking for objects only lasts one turn to allow the user\n   to mutate the object in-place and re-set it with the same identity\n   and have all sub-properties re-propagated in a subsequent turn.\n\nThe temp cache is not necessarily sufficient to prevent invalid array\npaths, since a splice can happen during the same turn (with pathological\nuser code); we could introduce a \"fixup\" for temporarily cached array\npaths if needed: https://github.com/Polymer/polymer/issues/4227",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1353,
              "column": 6
            },
            "end": {
              "line": 1381,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "shouldNotify"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_isPropertyPending",
          "description": "Returns true if the specified property has a pending change.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 456,
              "column": 6
            },
            "end": {
              "line": 458,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if property has a pending change"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_invalidateProperties",
          "description": "Overrides `PropertyAccessor`'s default async queuing of\n`_propertiesChanged`: if `__dataReady` is false (has not yet been\nmanually flushed), the function no-ops; otherwise flushes\n`_propertiesChanged` synchronously.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1403,
              "column": 6
            },
            "end": {
              "line": 1407,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_enableProperties",
          "description": "Call to enable property accessor processing. Before this method is\ncalled accessor values will be set but side effects are\nqueued. When called, any pending side effects occur immediately.\nFor elements, generally `connectedCallback` is a normal spot to do so.\nIt is safe to call this method multiple times as it only turns on\nproperty accessors once.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 486,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_flushProperties",
          "description": "Calls the `_propertiesChanged` callback with the current set of\npending changes (and old values recorded when pending changes were\nset), and resets the pending set of changes. Generally, this method\nshould not be called in user code.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 506,
              "column": 6
            },
            "end": {
              "line": 514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_propertiesChanged",
          "description": "Implements `PropertyAccessors`'s properties changed callback.\n\nRuns each class of effects for the batch of changed properties in\na specific order (compute, propagate, reflect, observe, notify).",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1542,
              "column": 6
            },
            "end": {
              "line": 1575,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentProps"
            },
            {
              "name": "changedProps"
            },
            {
              "name": "oldProps"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "Method called to determine whether a property value should be\nconsidered as a change and cause the `_propertiesChanged` callback\nto be enqueued.\n\nThe default implementation returns `true` for primitive types if a\nstrict equality check fails, and returns `true` for all Object/Arrays.\nThe method always returns false for `NaN`.\n\nOverride this method to e.g. provide stricter checking for\nObjects/Arrays when using immutable patterns.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 569,
              "column": 6
            },
            "end": {
              "line": 576,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "value",
              "type": "*",
              "description": "New property value"
            },
            {
              "name": "old",
              "type": "*",
              "description": "Previous property value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether the property should be considered a change\n  and enqueue a `_proeprtiesChanged` callback"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_addPropertyEffect",
          "description": "Equivalent to static `addPropertyEffect` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1142,
              "column": 6
            },
            "end": {
              "line": 1150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removePropertyEffect",
          "description": "Removes the given property effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1159,
              "column": 6
            },
            "end": {
              "line": 1165,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property the effect was associated with"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object to remove"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasPropertyEffect",
          "description": "Returns whether the current prototype/instance has a property effect\nof a certain type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1176,
              "column": 6
            },
            "end": {
              "line": 1179,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "type",
              "type": "string=",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReadOnlyEffect",
          "description": "Returns whether the current prototype/instance has a \"read only\"\naccessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1189,
              "column": 6
            },
            "end": {
              "line": 1191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasNotifyEffect",
          "description": "Returns whether the current prototype/instance has a \"notify\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1201,
              "column": 6
            },
            "end": {
              "line": 1203,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReflectEffect",
          "description": "Returns whether the current prototype/instance has a \"reflect to attribute\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1213,
              "column": 6
            },
            "end": {
              "line": 1215,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasComputedEffect",
          "description": "Returns whether the current prototype/instance has a \"computed\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1225,
              "column": 6
            },
            "end": {
              "line": 1227,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setPendingPropertyOrPath",
          "description": "Sets a pending property or path.  If the root property of the path in\nquestion had no accessor, the path is set, otherwise it is enqueued\nvia `_setPendingProperty`.\n\nThis function isolates relatively expensive functionality necessary\nfor the public API (`set`, `setProperties`, `notifyPath`, and property\nchange listeners via {{...}} bindings), such that it is only done\nwhen paths enter the system, and not at every propagation step.  It\nalso sets a `__dataHasPaths` flag on the instance which is used to\nfast-path slower path-matching code in the property effects host paths.\n\n`path` can be a path string or array of path parts as accepted by the\npublic API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1259,
              "column": 6
            },
            "end": {
              "line": 1291,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(number|string)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "shouldNotify",
              "type": "boolean=",
              "description": "Set to true if this change should\n cause a property notification event dispatch"
            },
            {
              "name": "isPathNotification",
              "type": "boolean=",
              "description": "If the path being set is a path\n  notification of an already changed value, as opposed to a request\n  to set and notify the change.  In the latter `false` case, a dirty\n  check is performed and then the value is set to the path before\n  enqueuing the pending property change."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property/path was enqueued in\n  the pending changes bag."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setUnmanagedPropertyToNode",
          "description": "Applies a value to a non-Polymer element/node's property.\n\nThe implementation makes a best-effort at binding interop:\nSome native element properties have side-effects when\nre-setting the same value (e.g. setting `<input>.value` resets the\ncursor position), so we do a dirty-check before setting the value.\nHowever, for better interop with non-Polymer custom elements that\naccept objects, we explicitly re-set object changes coming from the\nPolymer world (which may include deep object changes without the\ntop reference changing), erring on the side of providing more\ninformation.\n\nUsers may override this method to provide alternate approaches.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1313,
              "column": 6
            },
            "end": {
              "line": 1321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "The node to set a property on"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "The property to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "The value to set"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_enqueueClient",
          "description": "Enqueues the given client on a list of pending clients, whose\npending property changes can later be flushed via a call to\n`_flushClients`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1417,
              "column": 6
            },
            "end": {
              "line": 1422,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "client",
              "type": "Object",
              "description": "PropertyEffects client to enqueue"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_flushClients",
          "description": "Flushes any clients previously enqueued via `_enqueueClient`, causing\ntheir `_flushProperties` method to run.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1430,
              "column": 6
            },
            "end": {
              "line": 1441,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__enableOrFlushClients",
          "description": "(c) the stamped dom enables.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1455,
              "column": 6
            },
            "end": {
              "line": 1468,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_readyClients",
          "description": "Implements `PropertyEffects`'s `_readyClients` call. Attaches\nelement dom by calling `_attachDom` with the dom stamped from the\nelement's template via `_stampTemplate`. Note that this allows\nclient dom to be attached to the element prior to any observers\nrunning.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 665,
              "column": 6
            },
            "end": {
              "line": 674,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "setProperties",
          "description": "Sets a bag of property changes to this instance, and\nsynchronously processes all effects of the properties as a batch.\n\nProperty names must be simple properties, not paths.  Batched\npath propagation is not supported.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1495,
              "column": 6
            },
            "end": {
              "line": 1506,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of one or more key-value pairs whose key is\n  a property and value is the new value to set for that property."
            },
            {
              "name": "setReadOnly",
              "type": "boolean=",
              "description": "When true, any private values set in\n  `props` will be set. By default, `setProperties` will not set\n  `readOnly: true` root properties."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_propagatePropertyChanges",
          "description": "Called to propagate any property changes to stamped template nodes\nmanaged by this element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1586,
              "column": 6
            },
            "end": {
              "line": 1596,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps",
              "type": "Object",
              "description": "Bag of changed properties"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "linkPaths",
          "description": "Aliases one data path as another, such that path notifications from one\nare routed to the other.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1606,
              "column": 6
            },
            "end": {
              "line": 1611,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "to",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Target path to link."
            },
            {
              "name": "from",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Source path to link."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unlinkPaths",
          "description": "Removes a data path alias previously established with `_linkPaths`.\n\nNote, the path to unlink should be the target (`to`) used when\nlinking the paths.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1622,
              "column": 6
            },
            "end": {
              "line": 1627,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Target path to unlink."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifySplices",
          "description": "Notify that an array has changed.\n\nExample:\n\n    this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n    ...\n    this.items.splice(1, 1, {name: 'Sam'});\n    this.items.push({name: 'Bob'});\n    this.notifySplices('items', [\n      { index: 1, removed: [{name: 'Todd'}], addedCount: 1, obect: this.items, type: 'splice' },\n      { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n    ]);",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1658,
              "column": 6
            },
            "end": {
              "line": 1662,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "splices",
              "type": "Array",
              "description": "Array of splice records indicating ordered\n  changes that occurred to the array. Each record should have the\n  following fields:\n   * index: index at which the change occurred\n   * removed: array of items that were removed from this index\n   * addedCount: number of new items added at this index\n   * object: a reference to the array in question\n   * type: the string literal 'splice'\n\n  Note that splice records _must_ be normalized such that they are\n  reported in index order (raw results from `Object.observe` are not\n  ordered and must be normalized/merged before notifying)."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "get",
          "description": "Convenience method for reading a value from a path.\n\nNote, if any part in the path is undefined, this method returns\n`undefined` (this method does not throw when dereferencing undefined\npaths).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1683,
              "column": 6
            },
            "end": {
              "line": 1685,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to the value\n  to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `users.12.name` or `['users', 12, 'name']`)."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at the path, or `undefined` if any part of the path\n  is undefined."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "set",
          "description": "Convenience method for setting a value to a path and notifying any\nelements bound to the same path.\n\nNote, if any part in the path except for the last is undefined,\nthis method does nothing (this method does not throw when\ndereferencing undefined paths).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1707,
              "column": 6
            },
            "end": {
              "line": 1717,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string|!Array.<(string|number)>)",
              "description": "Path to the value\n  to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `'users.12.name'` or `['users', 12, 'name']`)."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set at the specified path."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated.\n  When specified, no notification will occur."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "push",
          "description": "Adds items onto the end of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1733,
              "column": 6
            },
            "end": {
              "line": 1742,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to array."
            },
            {
              "name": "...items"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "pop",
          "description": "Removes an item from the end of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1757,
              "column": 6
            },
            "end": {
              "line": 1766,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "splice",
          "description": "Starting from the start index specified, removes 0 or more items\nfrom the array and inserts 0 or more new items in their place.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.splice`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1785,
              "column": 6
            },
            "end": {
              "line": 1802,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to array."
            },
            {
              "name": "start",
              "type": "number",
              "description": "Index from which to start removing/inserting."
            },
            {
              "name": "deleteCount",
              "type": "number",
              "description": "Number of items to remove."
            },
            {
              "name": "...items"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Array of removed items."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "shift",
          "description": "Removes an item from the beginning of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1817,
              "column": 6
            },
            "end": {
              "line": 1826,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unshift",
          "description": "Adds items onto the beginning of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1842,
              "column": 6
            },
            "end": {
              "line": 1850,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to array."
            },
            {
              "name": "...items"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifyPath",
          "description": "Notify that a path has changed.\n\nExample:\n\n    this.item.user.name = 'Bob';\n    this.notifyPath('item.user.name');",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1864,
              "column": 6
            },
            "end": {
              "line": 1881,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Value at the path (optional)."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReadOnlyProperty",
          "description": "Equivalent to static `createReadOnlyProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1893,
              "column": 6
            },
            "end": {
              "line": 1900,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createPropertyObserver",
          "description": "Equivalent to static `createPropertyObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1913,
              "column": 6
            },
            "end": {
              "line": 1923,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "methodName",
              "type": "string",
              "description": "Name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createMethodObserver",
          "description": "Equivalent to static `createMethodObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1935,
              "column": 6
            },
            "end": {
              "line": 1941,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean|Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createNotifyingProperty",
          "description": "Equivalent to static `createNotifyingProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1951,
              "column": 6
            },
            "end": {
              "line": 1959,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReflectedProperty",
          "description": "Equivalent to static `createReflectedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1969,
              "column": 6
            },
            "end": {
              "line": 1982,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createComputedProperty",
          "description": "Equivalent to static `createComputedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1995,
              "column": 6
            },
            "end": {
              "line": 2001,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean|Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_bindTemplate",
          "description": "Equivalent to static `bindTemplate` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.\n\nThis method may be called on the prototype (for prototypical template\nbinding, to avoid creating accessors every instance) once per prototype,\nand will be called with `runtimeBinding: true` by `_stampTemplate` to\ncreate and link an instance of the template metadata associated with a\nparticular stamping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2171,
              "column": 6
            },
            "end": {
              "line": 2194,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            },
            {
              "name": "instanceBinding",
              "type": "boolean=",
              "description": "When false (default), performs\n  \"prototypical\" binding of the template and overwrites any previously\n  bound template for the class. When true (as passed from\n  `_stampTemplate`), the template info is instanced and linked into\n  the list of bound templates."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Template metadata object; for `runtimeBinding`,\n  this is an instance of the prototypical template info"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removeBoundDom",
          "description": "Removes and unbinds the nodes previously contained in the provided\nDocumentFragment returned from `_stampTemplate`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2270,
              "column": 6
            },
            "end": {
              "line": 2291,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "DocumentFragment",
              "description": "DocumentFragment previously returned\n  from `_stampTemplate` associated with the nodes to be removed"
            }
          ],
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "connectedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`connectedCallback`.\n\nThe default implementation enables the property effects system and\nflushes any pending properties, and updates shimmed CSS properties\nwhen using the ShadyCSS scoping/custom properties polyfill.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 628,
              "column": 6
            },
            "end": {
              "line": 633,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`disconnectedCallback`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 641,
              "column": 6
            },
            "end": {
              "line": 641,
              "column": 31
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_attachDom",
          "description": "Attaches an element's stamped dom to itself. By default,\nthis method creates a `shadowRoot` and adds the dom to it.\nHowever, this method may be overridden to allow an element\nto put its dom in another location.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 688,
              "column": 6
            },
            "end": {
              "line": 703,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "NodeList",
              "description": "to attach to the element."
            }
          ],
          "return": {
            "type": "Node",
            "desc": "node to which the dom has been attached."
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "updateStyles",
          "description": "When using the ShadyCSS scoping and custom property shim, causes all\nshimmed styles in this element (and its subtree) to be updated\nbased on current custom property values.\n\nThe optional parameter overrides inline custom property styles with an\nobject of properties where the keys are CSS properties, and the values\nare strings.\n\nExample: `this.updateStyles({'--color': 'blue'})`\n\nThese properties are retained unless a value of `null` is set.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 742,
              "column": 6
            },
            "end": {
              "line": 746,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Object=",
              "description": "Bag of custom property key/values to\n  apply to this element."
            }
          ],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "resolveUrl",
          "description": "Rewrites a given URL relative to a base URL. The base URL defaults to\nthe original location of the document containing the `dom-module` for\nthis element. This method will return the same URL before and after\nbundling.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 759,
              "column": 6
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "URL to resolve."
            },
            {
              "name": "base",
              "type": "string=",
              "description": "Optional base URL to resolve against, defaults\nto the element's `importPath`"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Rewritten URL relative to base"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_activated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ]
        },
        {
          "name": "_animationEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_finishInit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_translateBuffer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "up"
            }
          ]
        },
        {
          "name": "_disableScroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_enableScroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_scroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 235,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_reset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createPool",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_ensureStampedInstance",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 331,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "itemWrapper"
            }
          ]
        },
        {
          "name": "_updateClones",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "viewPortOnly"
            }
          ]
        },
        {
          "name": "_isVisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 354,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            },
            {
              "name": "container"
            }
          ]
        },
        {
          "name": "_forwardHostPropV2",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_forwardParentProp",
          "description": "Implements extension point from Templatizer mixin\nCalled as side-effect of a host property change, responsible for\nnotifying parent path change on each row.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 374,
          "column": 5
        }
      },
      "privacy": "public",
      "name": "InfiniteScrollerElement",
      "attributes": [
        {
          "name": "item-height",
          "description": "Height of individual items (in pixels).\nChanging after initialization not supported.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "buffer-size",
          "description": "Count of individual items in each buffer.\nThe scroller has 2 buffers altogether so bufferSize of 20\nwill result in 40 buffered DOM items in total.\nChanging after initialization not supported.",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 10
            },
            "end": {
              "line": 93,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "active",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 123,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vaadin-infinite-scroller",
      "superclass": "HTMLElement"
    },
    {
      "description": "",
      "summary": "",
      "path": "vaadin-date-picker-overlay.html",
      "properties": [
        {
          "name": "selectedDate",
          "type": "Date",
          "description": "The value for this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 12
            },
            "end": {
              "line": 347,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "focusedDate",
          "type": "Date",
          "description": "Date value which is focused using keyboard.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 12
            },
            "end": {
              "line": 356,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_focusedDateChanged\""
            }
          }
        },
        {
          "name": "_focusedMonthDate",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 12
            },
            "end": {
              "line": 358,
              "column": 37
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "initialPosition",
          "type": "Date",
          "description": "Date which should be visible when there is no value selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 12
            },
            "end": {
              "line": 366,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_initialPositionChanged\""
            }
          }
        },
        {
          "name": "_originDate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 12
            },
            "end": {
              "line": 370,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_visibleMonthIndex",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 372,
              "column": 12
            },
            "end": {
              "line": 372,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_desktopMode",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 12
            },
            "end": {
              "line": 374,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_translateX",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 12
            },
            "end": {
              "line": 378,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_translateXChanged\""
            }
          }
        },
        {
          "name": "_yearScrollerWidth",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 12
            },
            "end": {
              "line": 382,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "50"
        },
        {
          "name": "i18n",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 12
            },
            "end": {
              "line": 386,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "showWeekNumbers",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 12
            },
            "end": {
              "line": 390,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_ignoreTaps",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 12
            },
            "end": {
              "line": 392,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_notTapping",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 12
            },
            "end": {
              "line": 394,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "minDate",
          "type": "Date",
          "description": "The earliest date that can be selected. All earlier dates will be disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 12
            },
            "end": {
              "line": 399,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "maxDate",
          "type": "Date",
          "description": "The latest date that can be selected. All later dates will be disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 404,
              "column": 12
            },
            "end": {
              "line": 404,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_focused",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 12
            },
            "end": {
              "line": 406,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "Input label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 12
            },
            "end": {
              "line": 411,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 8
            },
            "end": {
              "line": 422,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "Fired when the scroller reaches the target scrolling position.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 8
            },
            "end": {
              "line": 437,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "announceFocusedDate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 8
            },
            "end": {
              "line": 463,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "focusCancel",
          "description": "Focuses the cancel button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 8
            },
            "end": {
              "line": 470,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "scrollToDate",
          "description": "Scrolls the list to the given Date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 475,
              "column": 8
            },
            "end": {
              "line": 477,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "animate"
            }
          ]
        },
        {
          "name": "_focusedDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 8
            },
            "end": {
              "line": 481,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focusedDate"
            }
          ]
        },
        {
          "name": "revealDate",
          "description": "Scrolls the month and year scrollers enough to reveal the given date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 8
            },
            "end": {
              "line": 500,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "_onOverlayFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 8
            },
            "end": {
              "line": 504,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onOverlayBlur",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 506,
              "column": 8
            },
            "end": {
              "line": 508,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_initialPositionChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 510,
              "column": 8
            },
            "end": {
              "line": 512,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "initialPosition"
            }
          ]
        },
        {
          "name": "_repositionYearScroller",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 514,
              "column": 8
            },
            "end": {
              "line": 517,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_repositionMonthScroller",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 519,
              "column": 8
            },
            "end": {
              "line": 522,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onMonthScroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 8
            },
            "end": {
              "line": 527,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onYearScroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 8
            },
            "end": {
              "line": 532,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onYearScrollTouchStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 534,
              "column": 8
            },
            "end": {
              "line": 539,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onMonthScrollTouchStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_doIgnoreTaps",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 549,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_formatDisplayed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 551,
              "column": 8
            },
            "end": {
              "line": 555,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "formatDate"
            }
          ]
        },
        {
          "name": "_onTodayTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 557,
              "column": 8
            },
            "end": {
              "line": 567,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_scrollToCurrentMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 569,
              "column": 8
            },
            "end": {
              "line": 575,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_showClear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 577,
              "column": 8
            },
            "end": {
              "line": 579,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedDate"
            }
          ]
        },
        {
          "name": "_onYearTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 581,
              "column": 8
            },
            "end": {
              "line": 587,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_scrollToPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 8
            },
            "end": {
              "line": 645,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "targetPosition"
            },
            {
              "name": "animate"
            }
          ]
        },
        {
          "name": "_limit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 647,
              "column": 8
            },
            "end": {
              "line": 649,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "range"
            }
          ]
        },
        {
          "name": "_handleTrack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 651,
              "column": 8
            },
            "end": {
              "line": 668,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_track",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 670,
              "column": 8
            },
            "end": {
              "line": 694,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_toggleAnimateClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 696,
              "column": 8
            },
            "end": {
              "line": 702,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "enable"
            }
          ]
        },
        {
          "name": "_toggleYearScroller",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 704,
              "column": 8
            },
            "end": {
              "line": 706,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_openYearScroller",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 708,
              "column": 8
            },
            "end": {
              "line": 710,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_closeYearScroller",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 712,
              "column": 8
            },
            "end": {
              "line": 714,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isYearScrollerVisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 716,
              "column": 8
            },
            "end": {
              "line": 718,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_translateXChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 720,
              "column": 8
            },
            "end": {
              "line": 726,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "x"
            }
          ]
        },
        {
          "name": "_yearAfterXYears",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 728,
              "column": 8
            },
            "end": {
              "line": 732,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ]
        },
        {
          "name": "_yearAfterXMonths",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 734,
              "column": 8
            },
            "end": {
              "line": 736,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "months"
            }
          ]
        },
        {
          "name": "_dateAfterXMonths",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 738,
              "column": 8
            },
            "end": {
              "line": 743,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "months"
            }
          ]
        },
        {
          "name": "_differenceInMonths",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 745,
              "column": 8
            },
            "end": {
              "line": 748,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date1"
            },
            {
              "name": "date2"
            }
          ]
        },
        {
          "name": "_differenceInYears",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 750,
              "column": 8
            },
            "end": {
              "line": 752,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date1"
            },
            {
              "name": "date2"
            }
          ]
        },
        {
          "name": "_clear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 754,
              "column": 8
            },
            "end": {
              "line": 757,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_close",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 759,
              "column": 8
            },
            "end": {
              "line": 761,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_cancel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 763,
              "column": 8
            },
            "end": {
              "line": 766,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_preventDefault",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 768,
              "column": 8
            },
            "end": {
              "line": 770,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_eventKey",
          "description": "Keyboard Navigation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 775,
              "column": 8
            },
            "end": {
              "line": 784,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onKeydown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 786,
              "column": 8
            },
            "end": {
              "line": 871,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_buttonFocused",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 873,
              "column": 8
            },
            "end": {
              "line": 875,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_currentlyFocusedDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 877,
              "column": 8
            },
            "end": {
              "line": 879,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_moveFocusByDays",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 881,
              "column": 8
            },
            "end": {
              "line": 907,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "days"
            }
          ]
        },
        {
          "name": "_moveFocusByMonths",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 909,
              "column": 8
            },
            "end": {
              "line": 940,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "months"
            }
          ]
        },
        {
          "name": "_moveFocusInsideMonth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 942,
              "column": 8
            },
            "end": {
              "line": 968,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focusedDate"
            },
            {
              "name": "property"
            }
          ]
        },
        {
          "name": "_dateAllowed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 970,
              "column": 8
            },
            "end": {
              "line": 972,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_isTodayAllowed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 974,
              "column": 8
            },
            "end": {
              "line": 981,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_stopPropagation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 983,
              "column": 8
            },
            "end": {
              "line": 985,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 333,
          "column": 6
        },
        "end": {
          "line": 986,
          "column": 7
        }
      },
      "privacy": "public",
      "name": "DatePickerOverlayElement",
      "attributes": [
        {
          "name": "selected-date",
          "description": "The value for this element.",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 12
            },
            "end": {
              "line": 347,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "focused-date",
          "description": "Date value which is focused using keyboard.",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 12
            },
            "end": {
              "line": 356,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "initial-position",
          "description": "Date which should be visible when there is no value selected.",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 12
            },
            "end": {
              "line": 366,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "i18n",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 12
            },
            "end": {
              "line": 386,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "show-week-numbers",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 12
            },
            "end": {
              "line": 390,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "min-date",
          "description": "The earliest date that can be selected. All earlier dates will be disabled.",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 12
            },
            "end": {
              "line": 399,
              "column": 25
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "max-date",
          "description": "The latest date that can be selected. All later dates will be disabled.",
          "sourceRange": {
            "start": {
              "line": 404,
              "column": 12
            },
            "end": {
              "line": 404,
              "column": 25
            }
          },
          "metadata": {},
          "type": "Date"
        },
        {
          "name": "label",
          "description": "Input label",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 12
            },
            "end": {
              "line": 411,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "scroll-animation-finished",
          "description": "scroll-animation-finished",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-date-changed",
          "description": "Fired when the `selectedDate` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "focused-date-changed",
          "description": "Fired when the `focusedDate` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vaadin-date-picker-overlay",
      "superclass": "HTMLElement"
    }
  ]
}
